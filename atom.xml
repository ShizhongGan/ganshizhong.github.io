<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>钟声</title>
  <icon>https://www.gravatar.com/avatar/fa65dd480df94b0c4abae5c60b4365d4</icon>
  <subtitle>甘士忠个人博客</subtitle>
  <link href="http://shizhonggan.github.io/atom.xml" rel="self"/>
  
  <link href="http://shizhonggan.github.io/"/>
  <updated>2022-02-08T02:45:08.139Z</updated>
  <id>http://shizhonggan.github.io/</id>
  
  <author>
    <name>甘士忠</name>
    <email>gan_shizhong@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 部署 Django-Mysql常见错误</title>
    <link href="http://shizhonggan.github.io/2022/01/30/Django/djangodeployerror/"/>
    <id>http://shizhonggan.github.io/2022/01/30/Django/djangodeployerror/</id>
    <published>2022-01-30T03:03:04.000Z</published>
    <updated>2022-02-08T02:45:08.139Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> apt-get install python3-dev nginx</span><br><span class="line">pip3 install -i  https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple uwsgi</span><br><span class="line"></span><br><span class="line">apt-get install mysql-server mysql-client # 连接数据库需要的环境</span><br><span class="line">apt-get install libmysqlclient-dev</span><br><span class="line">pip3 install -i  https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple mysqlclient</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker: Error response from daemon: driver failed programming external connectivity on endpoint testcontainer (c55fc0dd481c36765fcd968118c3fbf5c7fa686cdfc625c485f963109b0f89e3):  (iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0&#x2F;0 --dport 5000 -j DNAT --to-destination 172.17.0.2:80 ! -i docker0: iptables: No chain&#x2F;target&#x2F;match by that name.</span><br><span class="line"> (exit status 1))</span><br><span class="line"></span><br><span class="line"># Enter below command, it will clear all chains.</span><br><span class="line">$ sudo iptables -t filter -F</span><br><span class="line">$ iptables -t filter -X</span><br><span class="line"># Then restart Docker Service using below comamnd</span><br><span class="line">$ systemctl restart docker</span><br><span class="line"></span><br><span class="line">ModuleNotFoundError: No module named &#39;statsmodels&#39;</span><br><span class="line"></span><br><span class="line">pip3 install -i  https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple statsmodels</span><br></pre></td></tr></table></figure><h2 id="django-连接已有的MySQL数据库-操作方式"><a href="#django-连接已有的MySQL数据库-操作方式" class="headerlink" title="django 连接已有的MySQL数据库 操作方式"></a>django 连接已有的MySQL数据库 操作方式</h2><h3 id="方法一：采用django自由的语法进行操作"><a href="#方法一：采用django自由的语法进行操作" class="headerlink" title="方法一：采用django自由的语法进行操作"></a>方法一：采用django自由的语法进行操作</h3><p>参考：<a href="https://docs.djangoproject.com/zh-hans/3.0/howto/legacy-databases/">https://docs.djangoproject.com/zh-hans/3.0/howto/legacy-databases/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">python manage.py inspectdb <span class="comment"># 将mysql的数据库创建对应的模型</span></span><br><span class="line">python manage.py inspectdb &gt; models.py <span class="comment"># 将结果保存成文件</span></span><br><span class="line">python manage.py database table_name &gt; models.py <span class="comment"># 只输出特定数据库下某张表对应的模型 </span></span><br><span class="line"><span class="comment">## 例如：</span></span><br><span class="line">class Person(models.Model):</span><br><span class="line">    id = models.IntegerField(primary_key=True)</span><br><span class="line">    first_name = models.CharField(max_length=70)</span><br><span class="line">    class Meta:</span><br><span class="line">       managed = False <span class="comment"># 默认不能进行创建、修改和删除 ，此处修改为True</span></span><br><span class="line">       db_table = <span class="string">&#x27;CENSUS_PERSONS&#x27;</span></span><br><span class="line"></span><br><span class="line">python manage.py migrate </span><br></pre></td></tr></table></figure><p>方法一会存在以下几个问题：（django=2.2，本地windows环境）</p><ul><li>生成model.py文件时，应当在app目录下生成，否则会报错，得不到相应的模型</li><li>生成的model.py文件，是utf-16进制（或其他格式），需要转换为utf-8进制，否则无法识别文件，pycharm右下角可以看到文件进制并修改</li><li>数据库的表存在依赖关系，别名重复等情况。在指定特定表生成模型，注意也要将其他表也生成下来，同时别名重复需要加related_name，可以仔细阅读报错信息进行相应操作</li><li>多个数据库之前不容易操作，需要配置多数据库</li><li>多数据库识别，虽然setting配置了多数据库，但是还是要进行路由操作才能识别，否则只能识别default数据库</li></ul><h3 id="方法二：-第三方库"><a href="#方法二：-第三方库" class="headerlink" title="方法二： 第三方库"></a>方法二： 第三方库</h3><p>pymysql，优点：</p><ul><li>免去多数据库的路由配置</li><li>直接用mysql语句</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Django" scheme="http://shizhonggan.github.io/categories/Django/"/>
    
    
    <category term="Docker" scheme="http://shizhonggan.github.io/tags/Docker/"/>
    
    <category term="Django" scheme="http://shizhonggan.github.io/tags/Django/"/>
    
    <category term="Mysql" scheme="http://shizhonggan.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://shizhonggan.github.io/2022/01/27/BigData/SparkDeploy/"/>
    <id>http://shizhonggan.github.io/2022/01/27/BigData/SparkDeploy/</id>
    <published>2022-01-27T03:12:07.472Z</published>
    <updated>2022-01-27T03:12:16.474Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Ansible学习笔记--roles</title>
    <link href="http://shizhonggan.github.io/2021/12/29/Ansible/roles/"/>
    <id>http://shizhonggan.github.io/2021/12/29/Ansible/roles/</id>
    <published>2021-12-29T02:24:04.000Z</published>
    <updated>2022-01-06T09:01:37.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="roles"><a href="#roles" class="headerlink" title="roles"></a>roles</h2><p>ansible自1.2版本引入的新特性，用于层次性、结构化地组织playbook。<br>roles能够根据层次型结构自动装载变量文件、tasks以及handlers等。<br>要使用roles只需要在playbook中使用include[<strong>已经废弃不用了</strong>]指令即可。<br>简单来讲，roles就是通过分别将变量、文件、任务、模板及处理器放置于单独的目录中，并可以便捷地include它们的一种机制。<br>角色一般用于基于主机构建服务的场景中，但也可以是用于构建守护进程等场景中</p><p>复杂场景：建议使用roles，代码复用度高</p><ul><li>变更指定主机或主机组</li><li>如命名不规范维护和传承成本大</li><li>某些功能需多个Playbook，通过includes即可实现</li></ul><p>角色(roles)：角色集合</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir roles/&#123;mysql,httpd,nginx,memcache&#125; -pv </span><br><span class="line">tree roles</span><br><span class="line">roles/</span><br><span class="line">    mysql/</span><br><span class="line">    httpd/</span><br><span class="line">    nginx/</span><br><span class="line">    memcached/</span><br></pre></td></tr></table></figure><h2 id="基于ansible-roles-安装-nginx"><a href="#基于ansible-roles-安装-nginx" class="headerlink" title="基于ansible roles 安装 nginx"></a>基于ansible roles 安装 nginx</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 环境准备，清除已安装的nginx和用户组</span></span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;yum -y remove nginx&#x27;</span> -b</span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;rpm -q nginx&#x27;</span></span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;getent passwd nginx&#x27;</span></span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;getent group nginx&#x27;</span> </span><br><span class="line">ansible internal -m user -a <span class="string">&#x27;name=nginx state=absent&#x27;</span> -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始</span></span><br><span class="line"><span class="built_in">cd</span> ansible/ <span class="comment"># 根目录</span></span><br><span class="line"><span class="built_in">cd</span> roles/nginx <span class="comment"># 项目文件夹</span></span><br><span class="line"></span><br><span class="line">[ec2-user@master ansible]$ tree</span><br><span class="line">.</span><br><span class="line">├── nginx_role.yml <span class="comment"># 调用文件</span></span><br><span class="line">└── roles</span><br><span class="line">    ├── httpd</span><br><span class="line">    ├── memcached</span><br><span class="line">    ├── mysql</span><br><span class="line">    └── nginx</span><br><span class="line">        ├── tasks <span class="comment"># 在该文件下创建多个任务</span></span><br><span class="line">        │   ├── group.yml</span><br><span class="line">        │   ├── main.yml <span class="comment"># 入口文件</span></span><br><span class="line">        │   ├── restart.yml</span><br><span class="line">        │   ├── start.yml</span><br><span class="line">        │   ├── template.yml</span><br><span class="line">        │   ├── user.yml</span><br><span class="line">        │   └── yum.yml</span><br><span class="line">        └── templates <span class="comment"># 创建配置文件的j2模板</span></span><br><span class="line">            └── nginx.conf.j2</span><br><span class="line"></span><br><span class="line">mkdir tasks templates <span class="comment"># 创建两个常用文件夹</span></span><br><span class="line"><span class="built_in">cd</span> tasks</span><br><span class="line">vi main.yml <span class="comment"># 入口</span></span><br><span class="line">- include: group.yml</span><br><span class="line">- include: user.yml</span><br><span class="line">- include: yum.yml</span><br><span class="line">- include: template.yml</span><br><span class="line">- include: start.yml</span><br><span class="line"></span><br><span class="line">vi group.yml</span><br><span class="line">- name: create group</span><br><span class="line">  group: name=nginx gid=80</span><br><span class="line"></span><br><span class="line">vi user.yml</span><br><span class="line">- name: create user</span><br><span class="line">  user: name=nginx uid=80 group=nginx system=yes shell=/sbin/nologin</span><br><span class="line"></span><br><span class="line">vi yum.yml</span><br><span class="line">- name: install package</span><br><span class="line">  yum: name=nginx</span><br><span class="line"></span><br><span class="line">vi template.yml</span><br><span class="line">- name: copy conf</span><br><span class="line">  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line">vi start.yml</span><br><span class="line">- name: start service</span><br><span class="line">  service: name=nginx state=started enabled=yes</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ../../../</span><br><span class="line">vi nginx_role.yml</span><br><span class="line">---</span><br><span class="line">- hosts: internal</span><br><span class="line">  remote_user: ec2-user</span><br><span class="line">  become: yes</span><br><span class="line">  roles:</span><br><span class="line">    - role: nginx</span><br><span class="line"></span><br><span class="line">ansible-playbook -C nginx_role.yml <span class="comment"># 检查再执行</span></span><br><span class="line"></span><br><span class="line">rpm -qa nginx <span class="comment"># 查看系统是否有这个安装包</span></span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;ss -ntlp&#x27;</span> <span class="comment"># 可查看到80端口</span></span><br><span class="line">ansible internal -m shell -a <span class="string">&#x27;ps aux|grep nginx&#x27;</span> <span class="comment"># 查看进程 </span></span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## roles目录结构</span></span><br><span class="line">可以互相调用,roles目录结构,每个角色，以特定的层级目录结构进行组织</span><br></pre></td></tr></table></figure><p>playbook.yml  调用角色<br>roles/<br>  project/ (角色名称)<br>    tasks/<br>    files/<br>    vars/<br>    templates/<br>    handlers/<br>    default/ 不常用<br>    meta/    不常用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Roles各目录作用</span><br></pre></td></tr></table></figure><p>/roles/project/ :项目名称,有以下子目录<br>    files/ ：存放由copy或script模块等调用的文件<br>    templates/：template模块查找所需要模板文件的目录<br>    tasks/：定义task,role的基本元素，至少应该包含一个名为main.yml的文件；<br>            其它的文件需要在此文件中通过include进行包含<br>    handlers/：至少应该包含一个名为main.yml的文件；<br>               其它的文件需要在此文件中通过include进行包含<br>    vars/：定义变量，至少应该包含一个名为main.yml的文件；<br>           其它的文件需要在此文件中通过include进行包含<br>    meta/：定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为main.yml的文件，<br>           其它文件需在此文件中通过include进行包含<br>    default/：设定默认变量时使用此目录中的main.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roles&#x2F;appname 目录结构</span><br></pre></td></tr></table></figure><pre><code>tasks目录：至少应该包含一个名为main.yml的文件，其定义了此角色的任务列表；           此文件可以使用include包含其它的位于此目录中的task文件files目录：存放由copy或script等模块调用的文件；templates目录：template模块会自动在此目录中寻找Jinja2模板文件handlers目录：此目录中应当包含一个main.yml文件，用于定义此角色用到的各handler；              在handler中使用include包含的其它的handler文件也应该位于此目录中；vars目录：应当包含一个main.yml文件，用于定义此角色用到的变量；meta目录：应当包含一个main.yml文件，用于定义此角色的特殊设定及其依赖关系；          ansible1.3及其以后的版本才支持；default目录：为当前角色设定默认变量时使用此目录；应当包含一个main.yml文件</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">roles&#x2F;example_role&#x2F;files&#x2F;             所有文件，都将可存放在这里</span><br><span class="line">roles&#x2F;example_role&#x2F;templates&#x2F;         所有模板都存放在这里</span><br><span class="line">roles&#x2F;example_role&#x2F;tasks&#x2F;main.yml：   主函数，包括在其中的所有任务将被执行</span><br><span class="line">roles&#x2F;example_role&#x2F;handlers&#x2F;main.yml：所有包括其中的 handlers 将被执行</span><br><span class="line">roles&#x2F;example_role&#x2F;vars&#x2F;main.yml：    所有包括在其中的变量将在roles中生效</span><br><span class="line">roles&#x2F;example_role&#x2F;meta&#x2F;main.yml：    roles所有依赖将被正常登入</span><br></pre></td></tr></table></figure><h2 id="创建role"><a href="#创建role" class="headerlink" title="创建role"></a>创建role</h2><p>创建role的步骤</p><ul><li>创建以roles命名的目录</li><li>在roles目录中分别创建以各角色名称命名的目录，如webservers等</li><li>在每个角色命名的目录中分别创建files、handlers、meta、tasks、templates和vars目录；用不到的目录可以创建为空目录，也可以不创建</li><li>在playbook文件中，调用各角色</li></ul><h2 id="实验-创建httpd角色"><a href="#实验-创建httpd角色" class="headerlink" title="实验: 创建httpd角色"></a>实验: 创建httpd角色</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">1&gt; 创建roles目录</span><br><span class="line">   mkdir roles&#x2F;&#123;httpd,mysql,redis&#125;&#x2F;tasks -pv</span><br><span class="line">   mkdir  roles&#x2F;httpd&#x2F;&#123;handlers,files&#125;</span><br><span class="line"></span><br><span class="line">查看目录结构</span><br><span class="line">tree roles&#x2F;</span><br><span class="line">    roles&#x2F;</span><br><span class="line">    ├── httpd</span><br><span class="line">    │   ├── files</span><br><span class="line">    │   ├── handlers</span><br><span class="line">    │   └── tasks</span><br><span class="line">    ├── mysql</span><br><span class="line">    │   └── tasks</span><br><span class="line">    └── redis</span><br><span class="line">        └── tasks</span><br><span class="line"></span><br><span class="line">2&gt; 创建目标文件</span><br><span class="line">   cd roles&#x2F;httpd&#x2F;tasks&#x2F;</span><br><span class="line">   touch install.yml config.yml service.yml</span><br><span class="line"></span><br><span class="line">3&gt; vim install.yml</span><br><span class="line">   - name: install httpd package</span><br><span class="line">     yum: name&#x3D;httpd</span><br><span class="line">     </span><br><span class="line">   vim config.yml</span><br><span class="line">   - name: config file  </span><br><span class="line">     copy: src&#x3D;httpd.conf dest&#x3D;&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F; backup&#x3D;yes </span><br><span class="line">   </span><br><span class="line">   vim service.yml</span><br><span class="line">   - name: start service </span><br><span class="line">     service: name&#x3D;httpd state&#x3D;started enabled&#x3D;yes</span><br><span class="line">     </span><br><span class="line">4&gt; 创建main.yml主控文件,调用以上单独的yml文件,</span><br><span class="line">   main.yml定义了谁先执行谁后执行的顺序</span><br><span class="line">   vim main.yml</span><br><span class="line">   - include: install.yml</span><br><span class="line">   - include: config.yml</span><br><span class="line">   - include: service.yml</span><br><span class="line">   </span><br><span class="line">5&gt; 准备httpd.conf文件,放到httpd单独的文件目录下</span><br><span class="line">   cp &#x2F;app&#x2F;ansible&#x2F;flies&#x2F;httpd.conf ..&#x2F;files&#x2F;</span><br><span class="line">   </span><br><span class="line">6&gt; 创建一个网页</span><br><span class="line">   vim flies&#x2F;index.html</span><br><span class="line">   &lt;h1&gt; welcome to weixiaodong home &lt;\h1&gt;</span><br><span class="line"></span><br><span class="line">7&gt; 创建网页的yml文件</span><br><span class="line">   vim tasks&#x2F;index.yml</span><br><span class="line">   - name: index.html</span><br><span class="line">     copy: src&#x3D;index.html dest&#x3D;&#x2F;var&#x2F;www&#x2F;html </span><br><span class="line"></span><br><span class="line">8&gt; 将网页的yml文件写进mian.yml文件中</span><br><span class="line">   vim mian.yml</span><br><span class="line">   - include: install.yml</span><br><span class="line">   - include: config.yml</span><br><span class="line">   - include: index.yml</span><br><span class="line">   - include: service.yml</span><br><span class="line"></span><br><span class="line">9&gt; 在handlers目录下创建handler文件mian.yml</span><br><span class="line">   vim handlers&#x2F;main.yml</span><br><span class="line">   - name: restart service httpd</span><br><span class="line">     service: name&#x3D;httpd state&#x3D;restarted</span><br><span class="line"></span><br><span class="line">10&gt; 创建文件调用httpd角色</span><br><span class="line">    cd &#x2F;app&#x2F;ansidle&#x2F;roles</span><br><span class="line">    vim role_httpd.yml</span><br><span class="line">    ---</span><br><span class="line">    # httpd role</span><br><span class="line">    - hosts: appsrvs</span><br><span class="line">      remote_user: root </span><br><span class="line"></span><br><span class="line">      roles:       #调用角色</span><br><span class="line">        - role: httpd  </span><br><span class="line">        </span><br><span class="line">11&gt; 查看目录结构</span><br><span class="line">    tree </span><br><span class="line">    .</span><br><span class="line">    httpd</span><br><span class="line">    ├── files</span><br><span class="line">    │   ├── httpd.conf</span><br><span class="line">    │   └── index.html</span><br><span class="line">    ├── handlers</span><br><span class="line">    │   └── main.yml</span><br><span class="line">    └── tasks</span><br><span class="line">        ├── config.yml</span><br><span class="line">        ├── index.yml</span><br><span class="line">        ├── install.yml</span><br><span class="line">        ├── main.yml</span><br><span class="line">        └── service.yml</span><br><span class="line"></span><br><span class="line">12&gt; ansible-playbook role_httpd.yml</span><br><span class="line">针对大型项目使用Roles进行编排</span><br><span class="line">roles目录结构：</span><br><span class="line">playbook.yml</span><br><span class="line">roles&#x2F;</span><br><span class="line">  project&#x2F;</span><br><span class="line">    tasks&#x2F;</span><br><span class="line">    files&#x2F;</span><br><span class="line">    vars&#x2F;</span><br><span class="line">    templates&#x2F;</span><br><span class="line">    handlers&#x2F;</span><br><span class="line">    default&#x2F; # 不经常用</span><br><span class="line">    meta&#x2F;    # 不经常用</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">nginx-role.yml</span><br><span class="line">roles&#x2F;</span><br><span class="line">└── nginx</span><br><span class="line">    ├── files</span><br><span class="line">    │ └── main.yml</span><br><span class="line">    ├── tasks</span><br><span class="line">    │ ├── groupadd.yml</span><br><span class="line">    │ ├── install.yml</span><br><span class="line">    │ ├── main.yml</span><br><span class="line">    │ ├── restart.yml</span><br><span class="line">    │ └── useradd.yml</span><br><span class="line">    └── vars</span><br><span class="line">        └── main.yml</span><br><span class="line">示例</span><br><span class="line">roles的示例如下所示：</span><br><span class="line">site.yml</span><br><span class="line">webservers.yml</span><br><span class="line">dbservers.yml</span><br><span class="line">roles&#x2F;</span><br><span class="line">  common&#x2F;</span><br><span class="line">    files&#x2F;</span><br><span class="line">    templates&#x2F;</span><br><span class="line">    tasks&#x2F;</span><br><span class="line">    handlers&#x2F;</span><br><span class="line">    vars&#x2F;</span><br><span class="line">    meta&#x2F;</span><br><span class="line">  webservers&#x2F;</span><br><span class="line">    files&#x2F;</span><br><span class="line">    templates&#x2F;</span><br><span class="line">    tasks&#x2F;</span><br><span class="line">  handlers&#x2F;</span><br><span class="line">    vars&#x2F;</span><br><span class="line">    meta&#x2F;</span><br><span class="line">实验： 创建一个nginx角色</span><br><span class="line">建立nginx角色在多台主机上来部署nginx需要安装 创建账号</span><br><span class="line">1&gt; 创建nginx角色目录</span><br><span class="line">     cd &#x2F;app&#x2F;ansible&#x2F;role</span><br><span class="line">     mkdir nginx&#123;tesks,templates,hanslers&#125; -pv</span><br><span class="line"></span><br><span class="line">2&gt; 创建任务目录</span><br><span class="line">     cd tasks&#x2F;</span><br><span class="line">     touch insatll.yml config.yml service.yml file.yml user.yml</span><br><span class="line">   创建main.yml文件定义任务执行顺序</span><br><span class="line">     vim main.yml</span><br><span class="line">     - include: user.yml</span><br><span class="line">     - include: insatll.yml</span><br><span class="line">     - include: config.yml</span><br><span class="line">     - include: file.yml</span><br><span class="line">     - include: service.yml</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">3&gt; 准备配置文件(centos7、8)</span><br><span class="line">   ll &#x2F;app&#x2F;ansible&#x2F;role&#x2F;nginx&#x2F;templates&#x2F;</span><br><span class="line">   nginx7.conf.j2</span><br><span class="line">   nginx8.conf.j2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4&gt; 定义任务</span><br><span class="line">   vim tasks&#x2F;install.yml</span><br><span class="line">   - name: install</span><br><span class="line">     yum: name&#x3D;nginx</span><br><span class="line">     </span><br><span class="line">   vim tasks&#x2F;config.yml</span><br><span class="line">    - name: config file</span><br><span class="line">      template: src&#x3D;nginx7.conf.j2 dest&#x3D;&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">      when: ansible_distribution_major_version&#x3D;&#x3D;&quot;7&quot;</span><br><span class="line">      notify: restrat</span><br><span class="line">      </span><br><span class="line">    - name: config file</span><br><span class="line">      template: src&#x3D;nginx8.conf.j2 dest&#x3D;&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">      when: ansible_distribution_major_version&#x3D;&#x3D;&quot;8&quot;</span><br><span class="line">      notify: restrat</span><br><span class="line">      </span><br><span class="line">    vim tasks&#x2F;file.yml   跨角色调用file.yum文件,实现文件复用</span><br><span class="line">    - name: index.html</span><br><span class="line">      copy: src&#x3D;roles&#x2F;httpd&#x2F;files&#x2F;index.html dest&#x3D;&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F; </span><br><span class="line">   </span><br><span class="line">    vim tasks&#x2F;service.yml</span><br><span class="line">    - nmae: start service</span><br><span class="line">      service: name&#x3D;nginx state&#x3D;started enabled&#x3D;yes</span><br><span class="line">      </span><br><span class="line">    vim handlers&#x2F;main.yml</span><br><span class="line">    - name: restrat</span><br><span class="line">      service: name&#x3D;nginx state&#x3D;restarted</span><br><span class="line">      </span><br><span class="line">    vim roles&#x2F;role_nginix.yml</span><br><span class="line">    --- </span><br><span class="line">    #test rcle</span><br><span class="line">    - hosts: appsrvs</span><br><span class="line">    </span><br><span class="line">      roles: </span><br><span class="line">        - role: nginx</span><br><span class="line">        </span><br><span class="line">5&gt; 测试安装</span><br><span class="line">   ansible-playbook role_nginx.yml</span><br></pre></td></tr></table></figure><h2 id="playbook调用角色"><a href="#playbook调用角色" class="headerlink" title="playbook调用角色"></a>playbook调用角色</h2><p>调用角色方法1：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">websrvs</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">memcached</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><p>调用角色方法2：传递变量给角色</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">  <span class="attr">remote_user:</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">nginx</span>, <span class="attr">username:</span> <span class="string">nginx</span> &#125;   <span class="comment">#不同的角色调用不同的变量  </span></span><br><span class="line">    <span class="string">键role用于指定角色名称</span></span><br><span class="line">    <span class="string">后续的k/v用于传递变量给角色</span></span><br></pre></td></tr></table></figure><p>调用角色方法3：还可基于条件测试实现角色调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roles:</span><br><span class="line">  - &#123; role: nginx, username: nginx, when: ansible_distribution_major_version &#x3D;&#x3D; &#39;7&#39; &#125;</span><br></pre></td></tr></table></figure><h2 id="通过roles传递变量"><a href="#通过roles传递变量" class="headerlink" title="通过roles传递变量"></a>通过roles传递变量</h2><p>当给一个主机应用角色的时候可以传递变量，然后在角色内使用这些变量</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- hosts: webservers</span><br><span class="line">  roles:</span><br><span class="line">    - common</span><br><span class="line">    - &#123; role: foo_app_instance, dir: &#39;&#x2F;web&#x2F;htdocs&#x2F;a.com&#39;, port: 8080 &#125;</span><br></pre></td></tr></table></figure><h2 id="向roles传递参数"><a href="#向roles传递参数" class="headerlink" title="向roles传递参数"></a>向roles传递参数</h2><p>而在playbook中，可以这样使用roles:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">common</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">webservers</span></span><br></pre></td></tr></table></figure><p>也可以向roles传递参数,示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservers</span><br><span class="line">  roles:</span><br><span class="line">    - common</span><br><span class="line">    - &#123; role: foo_app_instance, dir: &#39;&#x2F;opt&#x2F;a&#39;, port: 5000 &#125;</span><br><span class="line">    - &#123; role: foo_app_instance, dir: &#39;&#x2F;opt&#x2F;b&#39;, port: 5001 &#125;</span><br></pre></td></tr></table></figure><h2 id="条件式地使用roles"><a href="#条件式地使用roles" class="headerlink" title="条件式地使用roles"></a>条件式地使用roles</h2><p>示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">some_role</span>, <span class="attr">when:</span> <span class="string">&quot;ansible_os_family == &#x27;RedHat&#x27;&quot;</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="Roles条件及变量等案例"><a href="#Roles条件及变量等案例" class="headerlink" title="Roles条件及变量等案例"></a>Roles条件及变量等案例</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># When条件</span></span><br><span class="line">    <span class="attr">roles:</span></span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">role:</span> <span class="string">nginx</span>, <span class="attr">when:</span> <span class="string">&quot;ansible_distribution_major_version == &#x27;7&#x27; &quot;</span> ,<span class="attr">username:</span> <span class="string">nginx</span> &#125;</span><br><span class="line"><span class="comment"># 变量调用</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">zabbix-proxy</span></span><br><span class="line">  <span class="attr">sudo:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">geerlingguy.php-mysql</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">dj-wasabi.zabbix-proxy</span>, <span class="attr">zabbix_server_host:</span> <span class="number">192.168</span><span class="number">.37</span><span class="number">.167</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="完整的roles架构"><a href="#完整的roles架构" class="headerlink" title="完整的roles架构"></a>完整的roles架构</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx-role.yml 顶层任务调用yml文件</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">testweb</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">httpd</span> <span class="string">可执行多个role</span></span><br><span class="line"></span><br><span class="line"><span class="string">cat</span> <span class="string">roles/nginx/tasks/main.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">groupadd.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">useradd.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">install.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">restart.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">filecp.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># roles/nginx/tasks/groupadd.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">group</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">name=nginx</span> <span class="string">state=present</span></span><br><span class="line"></span><br><span class="line"><span class="string">cat</span> <span class="string">roles/nginx/tasks/filecp.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">file</span> <span class="string">copy</span></span><br><span class="line">  <span class="attr">copy:</span> <span class="string">src=tom.conf</span> <span class="string">dest=/tmp/tom.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#以下文件格式类似：</span></span><br><span class="line"><span class="string">useradd.yml,install.yml,restart.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">ls</span> <span class="string">roles/nginx/files/</span></span><br><span class="line"><span class="string">tom.conf</span></span><br></pre></td></tr></table></figure><h2 id="roles-playbook-tags使用"><a href="#roles-playbook-tags使用" class="headerlink" title="roles playbook tags使用"></a>roles playbook tags使用</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ansible-playbook</span> <span class="string">--tags=&quot;nginx,httpd,mysql&quot;</span> <span class="string">nginx-role.yml</span> <span class="comment">#对标签进行挑选执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  nginx-role.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">testweb</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">role:</span> <span class="string">nginx</span> ,<span class="attr">tags:</span> [ <span class="string">&#x27;nginx&#x27;</span>, <span class="string">&#x27;web&#x27;</span> ] ,<span class="attr">when:</span> <span class="string">ansible_distribution_major_version</span> <span class="string">==</span> <span class="string">&quot;6“ &#125;</span></span><br><span class="line"><span class="string">    - &#123; role: httpd ,tags: [ &#x27;httpd&#x27;, &#x27;web&#x27; ] &#125;</span></span><br><span class="line"><span class="string">    - &#123; role: mysql ,tags: [ &#x27;mysql&#x27;, &#x27;db&#x27; ] &#125;</span></span><br><span class="line"><span class="string">    - &#123; role: marridb ,tags: [ &#x27;mysql&#x27;, &#x27;db&#x27; ] &#125;</span></span><br><span class="line"><span class="string">    - &#123; role: php &#125;</span></span><br></pre></td></tr></table></figure><h2 id="实验-创建角色memcached"><a href="#实验-创建角色memcached" class="headerlink" title="实验: 创建角色memcached"></a>实验: 创建角色memcached</h2><p>memcacched 当做缓存用,会在内存中开启一块空间充当缓存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">/etc/sysconfig/memcached</span> </span><br><span class="line">    <span class="string">PORT=&quot;11211&quot;</span></span><br><span class="line">    <span class="string">USER=&quot;memcached&quot;</span></span><br><span class="line">    <span class="string">MAXCONN=&quot;1024&quot;</span></span><br><span class="line">    <span class="string">CACHESIZE=&quot;64&quot;</span>    <span class="comment"># 缓存空间默认64M </span></span><br><span class="line">    <span class="string">OPTIONS=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&gt;</span> <span class="string">创建对用目录</span></span><br><span class="line">   <span class="string">cd</span> <span class="string">/app/ansible</span></span><br><span class="line">   <span class="string">mkdir</span> <span class="string">roles/memcached/&#123;tasks,templates&#125;</span> <span class="string">-pv</span></span><br><span class="line">   </span><br><span class="line"><span class="number">2</span><span class="string">&gt;</span> <span class="string">拷贝memcached配置文件模板</span></span><br><span class="line">   <span class="string">cp</span> <span class="string">/etc/sysconfig/memcached</span>  <span class="string">templates/memcached.j2</span></span><br><span class="line">   <span class="string">vim</span> <span class="string">templates/memcached.j2</span></span><br><span class="line">   <span class="string">CACHESIZE=&quot;&#123;&#123;ansible_memtotal_mb//4&#125;&#125;&quot;</span>   <span class="comment">#物理内存的1/4用做缓存</span></span><br><span class="line">   </span><br><span class="line"><span class="number">3</span><span class="string">&gt;</span> <span class="string">创建对应yml文件,并做相应配置</span></span><br><span class="line">   <span class="string">cd</span> <span class="string">tasks/</span></span><br><span class="line">   <span class="string">touch</span> <span class="string">install.yml</span> <span class="string">config.yml</span> <span class="string">service.yml</span></span><br><span class="line">   <span class="string">创建main.yml文件定义任务执行顺序</span></span><br><span class="line">   <span class="string">vim</span> <span class="string">main.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">include:</span> <span class="string">install.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">include:</span> <span class="string">config.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">include:</span> <span class="string">service.yml</span>  </span><br><span class="line">   </span><br><span class="line">   <span class="string">vim</span> <span class="string">install.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> </span><br><span class="line">     <span class="attr">yum:</span> <span class="string">name=memcached</span></span><br><span class="line">     </span><br><span class="line">   <span class="string">vim</span> <span class="string">config.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span> <span class="string">file</span></span><br><span class="line">     <span class="attr">template:</span> <span class="string">src=memcached.j2</span> <span class="string">dets=/etc/sysconfig/memcached</span></span><br><span class="line"></span><br><span class="line">   <span class="string">vim</span> <span class="string">service.yml</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">service</span></span><br><span class="line">     <span class="attr">service:</span> <span class="string">name=memcached</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span><span class="string">&gt;</span> <span class="string">创建调用角色文件</span></span><br><span class="line">   <span class="string">cd</span> <span class="string">/app/ansible/roles/</span></span><br><span class="line">   <span class="string">vim</span> <span class="string">role_memcached.yml</span></span><br><span class="line">    <span class="string">---</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">appsrvs</span></span><br><span class="line">    </span><br><span class="line">      <span class="attr">roles:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">memcached</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span><span class="string">&gt;</span> <span class="string">安装</span></span><br><span class="line">   <span class="string">ansible-playbook</span>  <span class="string">role_memcached.yml</span> </span><br><span class="line">   <span class="string">memcached端口号11211</span></span><br></pre></td></tr></table></figure><h2 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h2><ul><li>委任（指定某一台机器做某一个task）<ul><li>delegate_to</li><li>local_action (专指针对ansible命令执行的机器做的变更操作)</li></ul></li><li>交互提示<ul><li>prompt</li></ul></li><li>*暂停（java）<ul><li>wait_for</li></ul></li><li>Debug<ul><li>debug: msg=”This always executes.”</li></ul></li><li>Include</li><li>Template 多值合并</li><li>Template 动态变量配置</li></ul><h2 id="Ansible-Roles"><a href="#Ansible-Roles" class="headerlink" title="Ansible Roles"></a>Ansible Roles</h2><ul><li>委任<ul><li>delegate_to</li></ul></li><li>交互提示<ul><li>prompt</li></ul></li><li>暂停<ul><li>wait_for</li></ul></li><li>Debug<ul><li>debug: msg=”This always executes.”</li></ul></li><li>Include</li><li>Template 多值合并</li><li>Template 动态变量配置</li></ul><h2 id="推荐资料"><a href="#推荐资料" class="headerlink" title="推荐资料"></a>推荐资料</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;galaxy.ansible.com</span><br><span class="line">https:&#x2F;&#x2F;galaxy.ansible.com&#x2F;explore#&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;github.com&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;ansible.com.cn&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;ansible&#x2F;ansible</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;ansible&#x2F;ansible-examples</span><br></pre></td></tr></table></figure><h2 id="实验-实现二进制安装mysql的卸载"><a href="#实验-实现二进制安装mysql的卸载" class="headerlink" title="实验: 实现二进制安装mysql的卸载"></a>实验: 实现二进制安装mysql的卸载</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">remove_mysql.yml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># install mariadb server </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">appsrvs:!192.168.38.108</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">stop</span> <span class="string">service</span> </span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/etc/init.d/mysqld</span> <span class="string">stop</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">delete</span> <span class="string">user</span> </span><br><span class="line">      <span class="attr">user:</span> <span class="string">name=mysql</span> <span class="string">state=absent</span> <span class="string">remove=yes</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">delete</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">path=&#123;&#123;item&#125;&#125;</span> <span class="string">state=absent</span></span><br><span class="line">      <span class="attr">with_items:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">/usr/local/mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/usr/local/mariadb-10.2.27-linux-x86_64</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/etc/init.d/mysqld</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/etc/profile.d/mysql.sh</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/etc/my.cnf</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/data/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="string">ansible-playbook</span>  <span class="string">remove_mysql.yml</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;roles&quot;&gt;&lt;a href=&quot;#roles&quot; class=&quot;headerlink&quot; title=&quot;roles&quot;&gt;&lt;/a&gt;roles&lt;/h2&gt;&lt;p&gt;ansible自1.2版本引入的新特性，用于层次性、结构化地组织playbook。&lt;br&gt;roles能够根据层次型结</summary>
      
    
    
    
    <category term="Ansible" scheme="http://shizhonggan.github.io/categories/Ansible/"/>
    
    
    <category term="运维" scheme="http://shizhonggan.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>容器数据磁盘被写满处理</title>
    <link href="http://shizhonggan.github.io/2021/12/24/Docker/dockerclean/"/>
    <id>http://shizhonggan.github.io/2021/12/24/Docker/dockerclean/</id>
    <published>2021-12-24T05:54:04.000Z</published>
    <updated>2021-12-24T05:44:59.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>挺不错的博客： <a href="https://tencentcloudcontainerteam.github.io/tke-handbook/best-practice/kubernetes-best-practice-handle-disk-full.html">https://tencentcloudcontainerteam.github.io/tke-handbook/best-practice/kubernetes-best-practice-handle-disk-full.html</a></p><h2 id="简略步骤"><a href="#简略步骤" class="headerlink" title="简略步骤"></a>简略步骤</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d /var/lib/docker/containers</span><br><span class="line">$ du -sh * <span class="comment"># 找到比较大的目录</span></span><br><span class="line">$ <span class="built_in">cd</span> dda02c9a7491fa797ab730c1568ba06cba74cecd4e4a82e9d90d00fa11de743c</span><br><span class="line">$ cat /dev/null &gt; dda02c9a7491fa797ab730c1568ba06cba74cecd4e4a82e9d90d00fa11de743c-json.log.9 <span class="comment"># 删除log文件</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;挺不错的博客： &lt;a href=&quot;https://tencentcloudcontainerteam.github.io/tke-handb</summary>
      
    
    
    
    <category term="Docker" scheme="http://shizhonggan.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://shizhonggan.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="http://shizhonggan.github.io/2021/11/29/Linux/command/"/>
    <id>http://shizhonggan.github.io/2021/11/29/Linux/command/</id>
    <published>2021-11-29T02:24:04.000Z</published>
    <updated>2021-12-24T08:51:42.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="wc-l-统计行数"><a href="#wc-l-统计行数" class="headerlink" title="wc -l 统计行数"></a>wc -l 统计行数</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l |wc -l <span class="comment"># 统计ansible模块个数</span></span><br></pre></td></tr></table></figure><h2 id="cat-追加方式-修改网卡文件"><a href="#cat-追加方式-修改网卡文件" class="headerlink" title="cat 追加方式 修改网卡文件"></a>cat 追加方式 修改网卡文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ifcfg-eth1   <span class="comment"># 当没有对应网卡的配置文件时</span></span><br><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=dhcp </span><br><span class="line"></span><br><span class="line">service network restart </span><br><span class="line">service NetworkManager restart <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;wc-l-统计行数&quot;&gt;&lt;a href=&quot;#wc-l-统计行数&quot; class=&quot;headerlink&quot; title=&quot;wc -l 统计行数&quot;&gt;&lt;/a&gt;wc -l 统计行数&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
      
    
    
    
    <category term="Linux" scheme="http://shizhonggan.github.io/categories/Linux/"/>
    
    
    <category term="Shell commands" scheme="http://shizhonggan.github.io/tags/Shell-commands/"/>
    
  </entry>
  
  <entry>
    <title>Beats信息采集</title>
    <link href="http://shizhonggan.github.io/2021/11/01/ELK/Beats/"/>
    <id>http://shizhonggan.github.io/2021/11/01/ELK/Beats/</id>
    <published>2021-11-01T02:03:04.000Z</published>
    <updated>2021-11-11T02:24:20.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://www.elastic.co/cn/beats/">官网</a></p><h2 id="Filebeat"><a href="#Filebeat" class="headerlink" title="Filebeat"></a>Filebeat</h2><p>Filebeat是一个轻量级的日志采集器</p><p>当面对成百上千、甚至成千上万的服务器、虚拟机和容器生成的日志时，采用ssh十分麻烦。而Filebeat 可以提供一种轻量型方法，用于转发和汇总日志与文件，让简单的事情不再繁杂。</p><p>启动Filebeat后， 打开Logs UI, 直接在Kibana中观看对您的文件进行tail操作的过程。通过搜索栏按照服务、应用程序、主机、数据中心或者其他条件筛选，以跟踪您的全部汇总日志中的异常行为。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.1-linux-x86_64.tar.gz</span><br><span class="line">tar xzvf filebeat-7.15.1-linux-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">mv filebeat-7.15.1-linux-x86_64 /filebeat</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> filebeat</span><br><span class="line">vim gszbeat.yml <span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="comment">#### 内容如下</span></span><br><span class="line">filebeat.inputs: <span class="comment"># filebeat input输入</span></span><br><span class="line">- <span class="built_in">type</span>: stdin    <span class="comment"># 标准输入</span></span><br><span class="line">  enabled: <span class="literal">true</span>  <span class="comment"># 启用标准输入</span></span><br><span class="line">setup.template.settings: </span><br><span class="line">  index.number_of_shards: 3 <span class="comment"># 指定下载数</span></span><br><span class="line">output.console:  <span class="comment"># 控制台输出</span></span><br><span class="line">  pretty: <span class="literal">true</span>   <span class="comment"># 启用美化功能</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">./filebeat -e -c gszbeat.yml <span class="comment"># 启动</span></span><br><span class="line">chmod go-w /home/ec2-user/<span class="built_in">test</span>/filebeat/gszbeat.yml <span class="comment"># 若报错执行此命令</span></span><br></pre></td></tr></table></figure><p>然后我们在控制台输入hello，就能看到我们会有一个json的输出，是通过读取到我们控制台的内容后输出的。</p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim gszbeat-log.yml <span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="comment">#### 内容如下</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /home/ec2-user/<span class="built_in">test</span>/filebeattest/*.<span class="built_in">log</span></span><br><span class="line">setup.template.settings: </span><br><span class="line">  index.number_of_shards: 2</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">./filebeat -e -c gszbeat.yml <span class="comment"># 启动</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/ec2-user/<span class="built_in">test</span>/filebeattest/ <span class="comment"># 执行如下操作，会立刻读取更新的内容，并输出到控制台</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ganshizhong&quot;</span> &gt;&gt; a.log </span><br></pre></td></tr></table></figure><h3 id="自定义字段"><a href="#自定义字段" class="headerlink" title="自定义字段"></a>自定义字段</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vim gszbeat-log.yml <span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="comment">#### 内容如下</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /home/ec2-user/<span class="built_in">test</span>/filebeattest/*.<span class="built_in">log</span></span><br><span class="line">  tags:[<span class="string">&quot;web&quot;</span>,<span class="string">&quot;test&quot;</span>] <span class="comment">#添加自定义tag，便于后续的处理</span></span><br><span class="line">  fields: <span class="comment"># 添加自定义字段</span></span><br><span class="line">    from: test-web</span><br><span class="line">  fields_under_root: <span class="literal">true</span> <span class="comment">#true为添加到根节点，false为添加到子节点中</span></span><br><span class="line">setup.template.settings: </span><br><span class="line">  index.number_of_shards: 2</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">./filebeat -e -c gszbeat.yml <span class="comment"># 启动</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/ec2-user/<span class="built_in">test</span>/filebeattest/ <span class="comment"># 执行如下操作，会立刻读取更新的内容，并输出到控制台</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ganshizhong&quot;</span> &gt;&gt; a.log </span><br></pre></td></tr></table></figure><h3 id="输出到Elasticsearch"><a href="#输出到Elasticsearch" class="headerlink" title="输出到Elasticsearch"></a>输出到Elasticsearch</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim gszbeat-log.yml <span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="comment">#### 内容如下</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /home/ec2-user/<span class="built_in">test</span>/filebeattest/*.<span class="built_in">log</span></span><br><span class="line">  tags:[<span class="string">&quot;web&quot;</span>,<span class="string">&quot;test&quot;</span>] <span class="comment">#添加自定义tag，便于后续的处理</span></span><br><span class="line">  fields: <span class="comment"># 添加自定义字段</span></span><br><span class="line">    from: test-web</span><br><span class="line">  fields_under_root: <span class="literal">true</span> <span class="comment">#true为添加到根节点，false为添加到子节点中</span></span><br><span class="line">setup.template.settings: </span><br><span class="line">  index.number_of_shards: 2</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;127.0.0.1:9200&quot;</span>]</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">./filebeat -e -c gszbeat.yml <span class="comment"># 启动</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/ec2-user/<span class="built_in">test</span>/filebeattest/ <span class="comment"># 执行如下操作，会立刻读取更新的内容，并输出到控制台</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ganshizhong&quot;</span> &gt;&gt; a.log </span><br></pre></td></tr></table></figure><h2 id="Filebeat工作原理"><a href="#Filebeat工作原理" class="headerlink" title="Filebeat工作原理"></a>Filebeat工作原理</h2><p>Filebeat主要由下面几个组件组成： harvester、prospector 、input</p><ul><li>harvester<ul><li>负责读取单个文件的内容</li><li>harvester逐行读取每个文件（一行一行读取），并把这些内容发送到输出</li><li>每个文件启动一个harvester，并且harvester负责打开和关闭这些文件，这就意味着harvester运行时文件描述符保持着打开的状态。</li><li>在harvester正在读取文件内容的时候，文件被删除或者重命名了，那么Filebeat就会续读这个文件，这就会造成一个问题，就是只要负责这个文件的harvester没用关闭，那么磁盘空间就不会被释放，默认情况下，Filebeat保存问价你打开直到close_inactive到达</li></ul></li><li>prospector<ul><li>prospector负责管理harvester并找到所有要读取的文件来源</li><li>如果输入类型为日志，则查找器将查找路径匹配的所有文件，并为每个文件启动一个harvester</li><li>Filebeat目前支持两种prospector类型：log和stdin</li></ul></li><li>Filebeat如何保持文件的状态<ul><li>Filebeat保存每个文件的状态并经常将状态刷新到磁盘上的注册文件中</li><li>该状态用于记住harvester正在读取的最后偏移量，并确保发送所有日志行。</li><li>如果输出（例如ElasticSearch或Logstash）无法访问，Filebeat会跟踪最后发送的行，并在输出再次可以用时继续读取文件。</li><li>在Filebeat运行时，每个prospector内存中也会保存的文件状态信息，当重新启动Filebat时，将使用注册文件的数量来重建文件状态，Filebeat将每个harvester在从保存的最后偏移量继续读取</li><li>文件状态记录在data/registry文件中</li></ul></li><li>input<ul><li> 一个input负责管理harvester，并找到所有要读取的源</li><li>如果input类型是log，则input查找驱动器上与已定义的glob路径匹配的所有文件，并为每个文件启动一个harvester</li><li>每个input都在自己的Go例程中运行</li></ul></li></ul><p>下面的例子配置Filebeat从所有匹配指定的glob模式的文件中读取行</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/*.log</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/path2/*.log</span></span><br></pre></td></tr></table></figure><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./filebeat -e -c mogublog-es.yml</span><br><span class="line">./filebeat -e -c mogublog-es.yml -d <span class="string">&quot;publish&quot;</span></span><br><span class="line"><span class="comment">## 参数说明</span></span><br><span class="line">-e: 输出到标准输出，默认输出到syslog和logs下</span><br><span class="line">-c：指定配置文件</span><br><span class="line">-d：输出debug信息</span><br></pre></td></tr></table></figure><h2 id="Module-日志数据处理"><a href="#Module-日志数据处理" class="headerlink" title="Module 日志数据处理"></a>Module 日志数据处理</h2><p>前面要想实现日志数据的读取以及处理都是自己手动配置的，其实，在Filebeat中，有大量的Module，可以简化我们的配置，直接就可以使用，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">./filebeat modules list</span><br><span class="line"><span class="comment">## 显示如下：</span></span><br><span class="line">Enabled:</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line">Disabled:</span><br><span class="line">...</span><br><span class="line">kafka</span><br><span class="line">kibana</span><br><span class="line">mongodb</span><br><span class="line">mysql</span><br><span class="line">redis</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./filebeat modules <span class="built_in">enable</span> nginx <span class="comment"># 启动</span></span><br><span class="line">./filebeat modules <span class="built_in">disable</span> nginx <span class="comment"># 禁用</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启用nginx后，进行配置</span></span><br><span class="line"><span class="built_in">cd</span> modules.d/</span><br><span class="line">grep -Ev <span class="string">&#x27;*#|^$&#x27;</span> nginx.yml</span><br><span class="line"><span class="comment">## 输出，然后修改如下：</span></span><br><span class="line">- module: nginx</span><br><span class="line">  access:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    var.paths: [<span class="string">&quot;/home/ec2-user/program/gitlab/logs/nginx/*.log&quot;</span>]</span><br><span class="line">  error:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    var.paths: [<span class="string">&quot;/home/ec2-user/program/gitlab/logs/nginx/*.log&quot;</span>]</span><br><span class="line">  ingress_controller:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">vi nginx.yml <span class="comment"># 新建配置文件，内容如下</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 3</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;127.0.0.1:9200&quot;</span>]</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>s</p><h2 id="Metricbeat"><a href="#Metricbeat" class="headerlink" title="Metricbeat"></a>Metricbeat</h2><p>用于从系统和服务搜集指标。Matricbeat能够以一种轻量型的方式，输送各种系统和服务统计数据，从CPU到内存，从Redis到Nginx，不一而足。</p><ul><li>定期收集操作系统或应用程序的指标数据</li><li>存储到Elasticsearch中，进行实施的分析</li></ul><h3 id="Metricbeat组成"><a href="#Metricbeat组成" class="headerlink" title="Metricbeat组成"></a>Metricbeat组成</h3><p>Metricbeat有2部分组成，一部分是Module，另一个部分为Metricset</p><ul><li>Module<ul><li>收集的对象：如 MySQL、Redis、Nginx、操作系统等</li></ul></li><li>Metricset<ul><li>收集指标的集合：如 cpu、memory，network等</li></ul></li></ul><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-7.15.1-linux-arm64.tar.gz</span><br><span class="line">tar xzvf filebeat-7.15.1-linux-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</span><br><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://artifacts.elastic.co/packages/7.x/apt stable main&quot;</span> | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list <span class="comment"># 貌似不用修改x,也可自动下载7.15.1，默认最新的</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> metricbeat</span><br><span class="line"><span class="comment"># If your system does not use systemd then run:</span></span><br><span class="line"><span class="comment"># sudo update-rc.d metricbeat defaults 95 10</span></span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">grep -Ev <span class="string">&quot;^*#|^$&quot;</span> metricbeat.yml</span><br><span class="line"><span class="comment">### 返回</span></span><br><span class="line">metricbeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 1</span><br><span class="line">  index.codec: best_compression</span><br><span class="line">setup.kibana:</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  <span class="comment"># hosts: [&quot;localhost:9200&quot;]# 修改</span></span><br><span class="line">  hosts: [<span class="string">&quot;119.255.249.177:9200&quot;</span>]</span><br><span class="line">processors:</span><br><span class="line">  - add_host_metadata: ~</span><br><span class="line">  - add_cloud_metadata: ~</span><br><span class="line">  - add_docker_metadata: ~</span><br><span class="line">  - add_kubernetes_metadata: ~</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#hosts: \[&quot;localhost:9200&quot;\]#hosts: [&quot;119.255.249.177:9200&quot;]#&#x27;</span> metricbeat.yml</span><br><span class="line"></span><br><span class="line">./metricbeat -e</span><br></pre></td></tr></table></figure><h2 id="Nginx-Module"><a href="#Nginx-Module" class="headerlink" title="Nginx Module"></a>Nginx Module</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启Nginx Module，</span></span><br><span class="line"><span class="comment">#在nginx中，需要开启状态查询，才能查询到指标数据。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新编译nginx</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">./nginx -V <span class="comment">#查询版本信息</span></span><br><span class="line">nginx version: nginx/1.11.6</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC)</span><br><span class="line">configure arguments: --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置nginx</span></span><br><span class="line">vim nginx.conf</span><br><span class="line">location /nginx-status &#123;</span><br><span class="line">    stub_status on;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启nginx</span></span><br><span class="line">./nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment">### 测试： 119.255.x.x/nginx-status</span></span><br></pre></td></tr></table></figure><p>结果说明：</p><ul><li>Active connections：正在处理的活动连接数</li><li>server accepts handled requests<ul><li>第一个 server 表示Nginx启动到现在共处理了9个连接</li><li>第二个 accepts 表示Nginx启动到现在共成功创建 9 次握手</li><li>第三个 handled requests 表示总共处理了 21 次请求</li><li>请求丢失数 = 握手数 - 连接数 ，可以看出目前为止没有丢失请求</li></ul></li><li>Reading: 0 Writing: 1 Waiting: 1<ul><li>Reading：Nginx 读取到客户端的 Header 信息数</li><li>Writing：Nginx 返回给客户端 Header 信息数</li><li>Waiting：Nginx 已经处理完正在等候下一次请求指令的驻留链接（开启keep-alive的情况下，这个值等于 Active - (Reading+Writing)）</li></ul></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">配置nginx module</span><br><span class="line"><span class="comment">#启用redis module</span></span><br><span class="line">./metricbeat modules <span class="built_in">enable</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改redis module配置</span></span><br><span class="line">vim modules.d/nginx.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 然后修改下面的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Module: nginx</span></span><br><span class="line"><span class="comment"># Docs: https://www.elastic.co/guide/en/beats/metricbeat/6.5/metricbeat-modulenginx.</span></span><br><span class="line">html</span><br><span class="line">  - module: nginx</span><br><span class="line"><span class="comment">#metricsets:</span></span><br><span class="line"><span class="comment"># - stubstatus</span></span><br><span class="line">  period: 10s</span><br><span class="line"><span class="comment"># Nginx hosts</span></span><br><span class="line">  hosts: [<span class="string">&quot;http://127.0.0.1&quot;</span>]</span><br><span class="line"><span class="comment"># Path to server status. Default server-status</span></span><br><span class="line">  server_status_path: <span class="string">&quot;nginx-status&quot;</span></span><br><span class="line"><span class="comment">#username: &quot;user&quot;</span></span><br><span class="line"><span class="comment">#password: &quot;secret&quot;</span></span><br><span class="line">修改完成后，启动nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">./metricbeat -e</span><br></pre></td></tr></table></figure><p>更多Module使用参见官方文档：<br><a href="https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-modules.html">https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-modules.html</a></p><p><a href="https://www.cnblogs.com/cjsblog/p/9495024.html">https://www.cnblogs.com/cjsblog/p/9495024.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/cn/beats/&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Filebeat</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Nginx" scheme="http://shizhonggan.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Kibana数据可视化</title>
    <link href="http://shizhonggan.github.io/2021/11/01/ELK/Kibana/"/>
    <id>http://shizhonggan.github.io/2021/11/01/ELK/Kibana/</id>
    <published>2021-11-01T02:03:04.000Z</published>
    <updated>2021-11-17T07:14:37.167Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Kibana 是一款开源的数据分析和可视化平台，它是 Elastic Stack 成员之一，设计用于和 Elasticsearch 协作。您可以使用 Kibana 对 Elasticsearch 索引中的数据进行搜索、查看、交互操作。您可以很方便的利用图表、表格及地图对数据进行多元化的分析和呈现。</p><p>官网：<a href="https://www.elastic.co/cn/kibana">https://www.elastic.co/cn/kibana</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a file called kibana.repo in the /etc/yum.repos.d/ directory for RedHat based distributions</span></span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">&quot;[kibana-7.15.1]</span></span><br><span class="line"><span class="string">name=Kibana repository for 7.15.1 packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/7.15.1/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md&quot;</span> &gt; /etc/yum.repos.d/kibana.repo</span><br><span class="line"></span><br><span class="line">sudo yum install kibana</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker network create elastic</span><br><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class="line">docker run --name es01-test --net elastic -p 9200:9200 -p 9300:9300 -e <span class="string">&quot;discovery.type=single-node&quot;</span> docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class="line"></span><br><span class="line">docker pull docker.elastic.co/kibana/kibana:7.15.1</span><br><span class="line">docker run --name kib01-test --net elastic -p 5601:5601 -e <span class="string">&quot;ELASTICSEARCH_HOSTS=http://119.255.249.177:9200&quot;</span> docker.elastic.co/kibana/kibana:7.15.1</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf kibana-7.15.1-linux-x86_64.tar.gz</span><br><span class="line"><span class="comment"># 重命名</span></span><br><span class="line">mv kibana-7.15.1-linux-x86_64 kibana</span><br><span class="line"><span class="comment">## 然后在进入kibana目录，找到config文件夹下的kibana.yml进行配置的修改</span></span><br><span class="line"></span><br><span class="line">grep -Ev <span class="string">&quot;^#|^$&quot;</span> kibana.yml</span><br><span class="line"><span class="comment">## 输出如下</span></span><br><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span> <span class="comment">#对外暴露服务的地址</span></span><br><span class="line">elasticsearch.hosts: [<span class="string">&quot;http://192.168.0.8:9200&quot;</span>,<span class="string">&quot;http://192.168.0.13:9200&quot;</span>] <span class="comment">#配置Elasticsearch</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#\#server.host: &quot;localhost&quot;#server.host: &quot;0.0.0.0&quot;#&#x27;</span> kibana.yml</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#\#elasticsearch.hosts: \[&quot;http://localhost:9200&quot;\]#elasticsearch.hosts: \[&quot;http://192.168.0.8:9200&quot;,&quot;http://192.168.0.13:9200&quot;\]#&#x27;</span> kibana.yml </span><br></pre></td></tr></table></figure><h2 id="Metricbeat-仪表盘"><a href="#Metricbeat-仪表盘" class="headerlink" title="Metricbeat 仪表盘"></a>Metricbeat 仪表盘</h2><p>现在将Metricbeat的数据展示在Kibana中，首先需要修改我们的MetricBeat配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改metricbeat配置</span></span><br><span class="line">setup.kibana:</span><br><span class="line">  host: <span class="string">&quot;192.168.40.133:5601&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#安装仪表盘到Kibana【需要确保Kibana在正常运行，这个过程可能会有些耗时】</span></span><br><span class="line">./metricbeat setup --dashboards</span><br><span class="line">./metricbeat -e </span><br></pre></td></tr></table></figure><p>然后到kibana页面下，找到刚刚安装的仪表盘**[Metricbeat System] Host overview ECS**, 得到如下界面</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/metricbeat_kibana.png" alt="metricbeat_kibana"></p><h2 id="Nginx-指标仪表盘"><a href="#Nginx-指标仪表盘" class="headerlink" title="Nginx 指标仪表盘"></a>Nginx 指标仪表盘</h2><p>首先打开nginx状态；<br>然后到kibana页面下，找到仪表盘**[Metricbeat Nginx] Overview**,</p><h2 id="Nginx-日志仪表盘"><a href="#Nginx-日志仪表盘" class="headerlink" title="Nginx 日志仪表盘"></a>Nginx 日志仪表盘</h2><p>我们可以和刚刚Metricbeat的仪表盘一样，也可以将filebeat收集的日志记录，推送到Kibana中</p><p>首先我们需要修改filebeat的 kibana-nginx.yml配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 1</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;119.255.249.177:9200&quot;</span>]</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">setup.kibana:</span><br><span class="line">  host: <span class="string">&quot;119.254.169.244:5601&quot;</span></span><br></pre></td></tr></table></figure><p>然后按照仪表盘</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat -c kibana-nginx.yml setup</span><br></pre></td></tr></table></figure><p>安装成功显示如下：<br><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/kibana_filebeat.png" alt="kibana-filebeat"></p><p>然后我们启动filebeat即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat -e -c kibana-nginx.yml</span><br></pre></td></tr></table></figure><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/kibana_nginxlog.png" alt="kibana-nginxlog"></p><h2 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h2><p>Visualize 里设置，然后可以在Dashboard里导入。</p><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/kibana_devtool.png" alt="kibana-devtool"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Kibana 是一款开源的数据分析和可视化平台，它是 Elastic Stack 成员之一，设计用于和 Elasticsearch 协作。您</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Nginx" scheme="http://shizhonggan.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Logstash</title>
    <link href="http://shizhonggan.github.io/2021/11/01/ELK/Logstash/"/>
    <id>http://shizhonggan.github.io/2021/11/01/ELK/Logstash/</id>
    <published>2021-11-01T02:03:04.000Z</published>
    <updated>2021-11-17T09:48:15.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Logstash是一个开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到最喜欢的存储库中（我们的存储库当然是ElasticSearch）</p><p>Logstash充当数据处理的需求，当我们的数据需要处理的时候，会将它发送到Logstash进行处理，否则直接送到ElasticSearch中</p><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查jdk环境，要求jdk1.8+</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压安装包</span></span><br><span class="line">tar -xvf logstash-7.9.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个logstash示例</span></span><br><span class="line">bin/logstash -e <span class="string">&#x27;input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>其实原来的logstash的作用，就是为了做数据的采集，但是因为logstash的速度比较慢，所以后面使用beats来代替了Logstash，当我们使用上面的命令进行启动的时候，就可以发现了，因为logstash使用java写的，首先需要启动虚拟机，完成启动后，输入hello即可得到输出结果，如下图所示：</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/logstashtest.png" alt="logstashtest"></p><h2 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h2><p>Logstash配置有三个部分，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">input &#123; <span class="comment">#输入</span></span><br><span class="line">stdin &#123; ... &#125; <span class="comment">#标准输入</span></span><br><span class="line">&#125;</span><br><span class="line">filter &#123; <span class="comment">#过滤，对数据进行分割、截取等处理</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">output &#123; <span class="comment">#输出</span></span><br><span class="line">stdout &#123; ... &#125; <span class="comment">#标准输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><ul><li>采集各种样式、大小和来源的数据，数据往往以各种各样的形式，或分散或集中地存在于很多系统中。</li><li>Logstash 支持各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从您的日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。</li></ul><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><ul><li>实时解析和转换数据</li><li>数据从源传输到存储库的过程中，Logstash 过滤器能够解析各个事件，识别已命名的字段以构建结构，并将它们转换成通用格式，以便更轻松、更快速地分析和实现商业价值。</li></ul><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><ul><li>Logstash 提供众多输出选择，您可以将数据发送到您要指定的地方，并且能够灵活地解锁众多下游用例。</li></ul><h2 id="读取自定义日志"><a href="#读取自定义日志" class="headerlink" title="读取自定义日志"></a>读取自定义日志</h2><p>Filebeat读取了nginx的日志，如果是自定义结构的日志，就需要读取处理后才能使用，所以，这个时候就需要使用Logstash了，因为Logstash有着强大的处理能力，可以应对各种各样的场景。</p><h3 id="日志结构"><a href="#日志结构" class="headerlink" title="日志结构"></a>日志结构</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019-03-15 21:21:21|ERROR|1 读取数据出错|参数：id=1002</span><br></pre></td></tr></table></figure><p>可以看到，日志中的内容是使用“|”进行分割的，使用，我们在处理的时候，也需要对数据做分割处理。</p><p>编写配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim test-pipeline.conf</span><br><span class="line"><span class="comment">## 然后添加如下内容</span></span><br><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; <span class="string">&quot;/home/ec2-user/test/testlog/app.log&quot;</span> <span class="comment">## 不能用相对路径</span></span><br><span class="line">         start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">    split =&gt; &#123;<span class="string">&quot;message&quot;</span>=&gt;<span class="string">&quot;|&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./bin/logstash -f mogublog-pipeline.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 然后我们就插入我们的测试数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2019-03-15 21:21:21|ERROR|读取数据出错|参数：id=1002&quot;</span> &gt;&gt; app.log</span><br></pre></td></tr></table></figure><p>然后我们就可以看到logstash就会捕获到刚刚我们插入的数据，同时我们的数据也被分割了</p><p>结果如下：</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/logstashoutput.png" alt="logstashoutput"></p><h3 id="输出到Elasticsearch"><a href="#输出到Elasticsearch" class="headerlink" title="输出到Elasticsearch"></a>输出到Elasticsearch</h3><p>修改配置文件，将我们的日志记录输出到ElasticSearch中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; <span class="string">&quot;/soft/beats/logs/app.log&quot;</span></span><br><span class="line">        start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">    split =&gt; &#123;<span class="string">&quot;message&quot;</span>=&gt;<span class="string">&quot;|&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">hosts =&gt; [<span class="string">&quot;119.255.249.177:9200&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Logstash是一个开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到最喜欢的存储库中（我们的存储库当然是</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Logstash" scheme="http://shizhonggan.github.io/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>Nginx日志分析系统</title>
    <link href="http://shizhonggan.github.io/2021/11/01/ELK/NgixLog/"/>
    <id>http://shizhonggan.github.io/2021/11/01/ELK/NgixLog/</id>
    <published>2021-11-01T02:03:04.000Z</published>
    <updated>2021-11-09T09:07:35.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><p>Nginx是一款非常优秀的web服务器，往往nginx服务会作为项目的访问入口，那么，nginx的性能保障就变得非常重要了，如果nginx的运行出现了问题就会对项目有较大的影响，所以，我们需要对nginx的运行有监控措施，实时掌握nginx的运行情况，那就需要收集nginx的运行指标和分析nginx的运行日志了。</p><h2 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h2><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/nginxlogflow.png" alt="nginxlogflow"></p><p>说明：</p><ul><li>通过Beats采集Nginx的指标数据和日志数据</li><li>Beats采集到数据后发送到Elasticsearch中</li><li>Kibana读取数据进行分析</li><li>用户通过Kibana进行查看分析报表</li></ul><h2 id="Nginx部署安装"><a href="#Nginx部署安装" class="headerlink" title="Nginx部署安装"></a>Nginx部署安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 官网下载地址 http://nginx.org/download/</span></span><br><span class="line"><span class="comment">## ubuntu 安装</span></span><br><span class="line">sudo apt install nginx <span class="comment"># 80端口, 此处不要与gitlab的nginx冲突</span></span><br><span class="line">tail -f /var/<span class="built_in">log</span>/nginx/access.log</span><br><span class="line">tail -f gitlab/logs/nginx/gitlab_access.log</span><br><span class="line"><span class="comment">## centos 源码安装</span></span><br><span class="line">tar -xvf nginx-xxxx.tar.gz</span><br><span class="line">yum -y install pcre-devel zlib-devel</span><br><span class="line">./configure</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><p><a href="http://www.moguit.cn/#/info?blogUid=e8d3e38ba35b4765ae128256eb44e341">centos安装Nginx参考</a></p><p><a href="/2021/11/01/ELK/Beats/">filebeat安装与使用参</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim best-nginx.yml <span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="comment">#### 内容如下</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /home/ec2-user/program/gitlab/logs/nginx/*.<span class="built_in">log</span></span><br><span class="line">  tags:[<span class="string">&quot;nginx&quot;</span>]</span><br><span class="line">  fields_under_root: <span class="literal">false</span></span><br><span class="line">setup.template.settings: </span><br><span class="line">  index.number_of_shards: 3</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;127.0.0.1:9200&quot;</span>]</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">./filebeat -e -c gszbeat.yml <span class="comment"># 启动</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ganshizhong&quot;</span> &gt;&gt; a.log </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目需求&quot;&gt;&lt;a href=&quot;#项目需求&quot; class=&quot;headerlink&quot; title=&quot;项目需求&quot;&gt;&lt;/a&gt;项目需求&lt;/h2&gt;&lt;p&gt;Nginx是一款非常优秀的web服务器，往往nginx服务会作为项目的访问入口，那么，nginx的性能保障就变得非常重要了，</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Nginx" scheme="http://shizhonggan.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL游标使用方法</title>
    <link href="http://shizhonggan.github.io/2021/10/28/SQL/mysql_cursor/"/>
    <id>http://shizhonggan.github.io/2021/10/28/SQL/mysql_cursor/</id>
    <published>2021-10-28T06:55:59.909Z</published>
    <updated>2021-10-28T06:55:59.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h2><p>游标的特性</p><ul><li>不敏感：数据库可以选择不复制结果集</li><li>只读</li><li>不滚动：游标只能向一方向前进，并且不可以跳过任何一行数据</li></ul><p>游标的优点</p><ul><li>游标是针对行操作的，对从数据库中 select 查询得到的结果集的 每一行可以</li><li>进行分开的独立的相同或者不相同的操作，是一种分离的思想。</li></ul><p>游标的缺点</p><ul><li>性能不高</li><li>只能一行一行操作</li><li>使用游标会产生死锁，造成内存开销大</li></ul><p>游标的适用场景</p><ul><li>存储过程</li><li>函数</li><li>触发器</li><li>事件<h2 id="游标使用方法"><a href="#游标使用方法" class="headerlink" title="游标使用方法"></a>游标使用方法</h2>游标五步法：</li><li>一、声明一个游标: <ul><li>DECLARE cursor_name CURSOR FOR select_statement 这个语句声明一个游标。也可以在子程序中定义多个游标，一个块中的每一个游标必须命名唯一。声明游标后也是单条操作的。</li></ul></li><li>二、打开定义的游标:<ul><li>OPEN cursor_name 这个语句打开先前声明的游标。</li></ul></li><li>三、获得下一行数据:<ul><li>FETCH cursor_name INTO var_name [, var_name] … 这个语句用指定的打开游标读取下一行（如果有下一行的话），并且前进游标指针至该行。</li></ul></li><li>四、需要执行的语句(增删改查):这里视具体情况而定</li><li>五、释放游标:<ul><li>CLOSE cursor_name 这个语句关闭先前打开的游标，注意，用完后必须关闭。</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> UpdateImgURL;</span><br><span class="line"><span class="comment">/***游标***/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> UpdateImgURL()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="comment">-- 遍历数据结束标志</span></span><br><span class="line"><span class="keyword">DECLARE</span> Done <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> Imgurl <span class="type">CHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> &quot;&quot;;</span><br><span class="line"><span class="comment">-- 游标</span></span><br><span class="line"><span class="keyword">DECLARE</span> RS <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> imgurl <span class="keyword">FROM</span> weixin_linkface_userinfo ;</span><br><span class="line"><span class="comment">-- 异常处理</span></span><br><span class="line"><span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">SQLSTATE</span> <span class="string">&#x27;02000&#x27;</span> <span class="keyword">SET</span> Done <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 打开游标</span></span><br><span class="line"><span class="keyword">OPEN</span> RS;</span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> RS <span class="keyword">INTO</span> Imgurl;</span><br><span class="line">REPEAT</span><br><span class="line">IF <span class="keyword">NOT</span> Done <span class="keyword">THEN</span></span><br><span class="line"><span class="comment">/**update 表名 set 字段名=REPLACE (字段名,&#x27;原来的值&#x27;,&#x27;要修改的值&#x27;)  where 条件  **/</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">FETCH</span> NEXT <span class="keyword">FROM</span> RS <span class="keyword">INTO</span> Imgurl;</span><br><span class="line">UNTIL Done <span class="keyword">END</span> REPEAT;</span><br><span class="line"><span class="keyword">CLOSE</span> rs;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">/**执行存储过程**/</span></span><br><span class="line"><span class="keyword">CALL</span> UpdateImgURL</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="keyword">DECLARE</span>  no_more_record <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">DECLARE</span>  pID <span class="type">BIGINT</span>(<span class="number">20</span>);</span><br><span class="line"> <span class="keyword">DECLARE</span>  pValue <span class="type">DECIMAL</span>(<span class="number">15</span>,<span class="number">5</span>);</span><br><span class="line"> <span class="keyword">DECLARE</span>  cur_record <span class="keyword">CURSOR</span> <span class="keyword">FOR</span>   <span class="keyword">SELECT</span> colA, colB <span class="keyword">from</span> tableABC;  <span class="comment">/*首先这里对游标进行定义*/</span></span><br><span class="line"> <span class="keyword">DECLARE</span>  CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">NOT</span> FOUND  <span class="keyword">SET</span>  no_more_record <span class="operator">=</span> <span class="number">1</span>; <span class="comment">/*这个是个条件处理,针对NOT FOUND的条件,当没有记录时赋值为1*/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">OPEN</span>  cur_record; <span class="comment">/*接着使用OPEN打开游标*/</span></span><br><span class="line"> <span class="keyword">FETCH</span>  cur_record <span class="keyword">INTO</span> pID, pValue; <span class="comment">/*把第一行数据写入变量中,游标也随之指向了记录的第一行*/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> WHILE no_more_record <span class="operator">!=</span> <span class="number">1</span> DO</span><br><span class="line"> <span class="keyword">INSERT</span>  <span class="keyword">INTO</span> testTable(ID, <span class="keyword">Value</span>)</span><br><span class="line"> <span class="keyword">VALUES</span>  (pID, pValue);</span><br><span class="line"> <span class="keyword">FETCH</span>  cur_record <span class="keyword">INTO</span> pID, pValue;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">END</span> WHILE;</span><br><span class="line"> <span class="keyword">CLOSE</span>  cur_record;  <span class="comment">/*用完后记得用CLOSE把资源释放掉*/</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;游标&quot;&gt;&lt;a href=&quot;#游标&quot; class=&quot;headerlink&quot; title=&quot;游标&quot;&gt;&lt;/a&gt;游标&lt;/h2&gt;&lt;p&gt;游标的特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不敏感：数据库可以选择不复制结果集&lt;/li&gt;
&lt;li&gt;只读&lt;/li&gt;
&lt;li&gt;不滚动：游标只能向一方向</summary>
      
    
    
    
    <category term="SQL" scheme="http://shizhonggan.github.io/categories/SQL/"/>
    
    
    <category term="游标" scheme="http://shizhonggan.github.io/tags/%E6%B8%B8%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Stack(01)--Elasticsearch安装</title>
    <link href="http://shizhonggan.github.io/2021/10/11/ELK/ElasticSearch01/"/>
    <id>http://shizhonggan.github.io/2021/10/11/ELK/ElasticSearch01/</id>
    <published>2021-10-11T02:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Elastic-Stack-简介"><a href="#Elastic-Stack-简介" class="headerlink" title="Elastic Stack 简介"></a>Elastic Stack 简介</h2><p>如果你没有听说过Elastic Stack，那你一定听说过ELK，实际上ELK是三款软件的简称，分别是Elasticsearch、 Logstash、Kibana组成，在发展的过程中，又有新成员Beats的加入，所以就形成了Elastic Stack。所以说，ELK是旧的称呼，Elastic Stack是新的名字。</p><ul><li>Beats 采集一切数据<ul><li>Filebeat 日志文件</li><li>Metricbeat 服务指标</li><li>Winlogbeat Win事件日志</li><li>Packetbeat 网络流量</li><li>健康检查</li></ul></li><li>elasticsearch 核心存储和检索引擎。<ul><li>基于java，是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</li></ul></li><li>logstash 高吞吐量数据处理引擎<ul><li>基于java，是一个开源的用于收集,分析和存储日志的工具。</li></ul></li><li>kibana 数据可视化<ul><li>基于nodejs，也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的Web 界面，可以汇总、分析和搜索重要数据日志。</li></ul></li></ul><p>Beats是elastic公司开源的一款采集系统监控数据的代理agent，是在被监控服务器上以客户端形式运行的数据收集器的统称，可以直接把数据发送给Elasticsearch或者通过Logstash发送给Elasticsearch，然后进行后续的数据分析活动。Beats由如下组成:</p><ul><li>Packetbeat：是一个网络数据包分析器，用于监控、收集网络流量信息，Packetbeat嗅探服务器之间的流量，解析应用层协议，并关联到消息的处理，其支 持ICMP (v4 and v6)、DNS、HTTP、Mysql、PostgreSQL、Redis、MongoDB、Memcache等协议；</li><li>Filebeat：用于监控、收集服务器日志文件，其已取代 logstash forwarder；</li><li>Metricbeat：可定期获取外部系统的监控指标信息，其可以监控、收集 Apache、HAProxy、MongoDB MySQL、Nginx、PostgreSQL、Redis、System、Zookeeper等服务；</li><li>Winlogbeat:用于监控、手机Windows系统的日志信息</li></ul><blockquote><p>Beats和Logstash其实都可以进行数据的采集，但是目前主流的是使用Beats进行数据采集，然后使用 Logstash进行数据的分割处理等，早期没有Beats的时候，使用的就是Logstash进行数据的采集。</p></blockquote><h2 id="Elasticsearch-安装"><a href="#Elasticsearch-安装" class="headerlink" title="Elasticsearch 安装"></a>Elasticsearch 安装</h2><p>centos7</p><p>云主机先打开9200端口 68端口</p><h3 id="单机版安装"><a href="#单机版安装" class="headerlink" title="单机版安装"></a>单机版安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加新用户</span></span><br><span class="line">useradd elsearch</span><br><span class="line"><span class="comment"># 创建一个目录，存放下载的软件</span></span><br><span class="line">mkdir /itcast</span><br><span class="line"><span class="built_in">cd</span> /itcast</span><br><span class="line">mkdir es <span class="comment"># 将软件安装到这个目录</span></span><br><span class="line"></span><br><span class="line">chown elsearch:elsearch /itcast/ -R</span><br><span class="line"><span class="comment"># 进入，然后通过xftp工具，将刚刚下载的文件拖动到该目录下</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line">tar -zxvf elasticsearch-7.15.0-linux-x86_64.tar.gz -C es</span><br><span class="line"></span><br><span class="line">vi config/elasticsearch.yml</span><br><span class="line">    network.host: 192.168.0.1 <span class="comment">#0.0.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在Elasticsearch中如果，network.host不是localhost或者127.0.0.1的话，就会认为是生产环境，会对环境的要求比较高，我们的测试环境不一定能够满足，一般情况下需要修改2处配置，如下：</span></span><br><span class="line">vi config/jvm.options</span><br><span class="line">    -Xms256m <span class="comment"># 内存128M，根据机器修改</span></span><br><span class="line">    -Xmx256m</span><br><span class="line"></span><br><span class="line">vi /etc/sysctl.conf <span class="comment"># root用户操作</span></span><br><span class="line">    vm.max_map_count=655360</span><br><span class="line">sysctl -p <span class="comment"># root用户下，使生效</span></span><br><span class="line"></span><br><span class="line">su - elsearch <span class="comment"># 切换用户</span></span><br><span class="line"><span class="built_in">cd</span> bin</span><br><span class="line">./elasticsearch 或 ./elasticsearch -d <span class="comment">#后台系统</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报错一：</span></span><br><span class="line">bootstrap check failure [1] of [2]: max file descriptors [4096] <span class="keyword">for</span> elasticsearch process is too low, increase to at least [65535]</span><br><span class="line"><span class="comment">## 解决方法</span></span><br><span class="line">vi /etc/security/limits.conf <span class="comment"># root用户修改，且用户退出后重新登录生效</span></span><br><span class="line">    * soft nofile 65536</span><br><span class="line">    * hard nofile 131072</span><br><span class="line">    * soft nproc 2048</span><br><span class="line">    * hard nproc 65535</span><br><span class="line"><span class="comment"># 报错二：</span></span><br><span class="line">bootstrap check failure [2] of [2]: the default discovery settings are unsuitable <span class="keyword">for</span> production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</span><br><span class="line">ERROR: Elasticsearch did not <span class="built_in">exit</span> normally - check the logs at /itcast/es/elasticsearch-7.15.0/logs/elasticsearch.log</span><br><span class="line"><span class="comment">## 解决方法</span></span><br><span class="line">vi config/elasticsearch.yml <span class="comment"># 取消注释，并保留一个节点</span></span><br><span class="line">    node.name: node-1</span><br><span class="line">    cluster.initial_master_nodes: [<span class="string">&quot;node-1]</span></span><br></pre></td></tr></table></figure><p>更多错误参见：</p><p><a href="https://gitee.com/moxi159753/LearningNotes/tree/master/ElasticStack/1_ElasticSearch%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85">https://gitee.com/moxi159753/LearningNotes/tree/master/ElasticStack/1_ElasticSearch%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85</a></p><p>成功安装后访问如下地址，如图所示：</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/elasticsearchinstalled.png" alt="elsearchinstalled"></p><h2 id="ElasticSearchHead可视化工具"><a href="#ElasticSearchHead可视化工具" class="headerlink" title="ElasticSearchHead可视化工具"></a>ElasticSearchHead可视化工具</h2><p>由于ES官方没有给ES提供可视化管理工具，仅仅是提供了后台的服务，elasticsearch-head是一个为ES开发的一个页面客户端工具，其源码托管于Github，地址为 传送门</p><p>head提供了以下安装方式</p><ul><li>源码安装，通过npm run start启动（不推荐）</li><li>通过docker安装（推荐）</li><li>通过chrome插件安装（推荐, 需翻墙）</li><li>通过ES的plugin方式安装（不推荐）</li></ul><h3 id="Dcoker方式安装"><a href="#Dcoker方式安装" class="headerlink" title="Dcoker方式安装"></a>Dcoker方式安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在另外一台安装docker的云主机部署的，随意哪里都行</span></span><br><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull mobz/elasticsearch-head:5</span><br><span class="line"><span class="comment">#创建容器</span></span><br><span class="line">docker create --name elasticsearch-head -p 9100:9100 mobz/elasticsearch-head:5</span><br><span class="line"></span><br><span class="line">docker network create --subnet=10.0.30.0/24 --opt com.docker.network.driver.mtu=1450 docker-gsz</span><br><span class="line"></span><br><span class="line">docker create --name elasticsearch-head --net docker-gsz --ip 10.0.30.11 -p 9100:9100 mobz/elasticsearch-head:5</span><br><span class="line"><span class="comment">#启动容器</span></span><br><span class="line">docker start elasticsearch-head</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注意： 由于前后端分离开发，所以会存在跨域问题，需要在服务端做CORS的配置，如下：</span></span><br><span class="line"></span><br><span class="line">vim elasticsearch.yml</span><br><span class="line"></span><br><span class="line">http.cors.enabled: <span class="literal">true</span> http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><p>成功安装并连接如下图所示：</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/elasticsearchhead.png" alt="elasticsearchhead"></p><h3 id="通过Chrome插件安装"><a href="#通过Chrome插件安装" class="headerlink" title="通过Chrome插件安装"></a>通过Chrome插件安装</h3><p>打开chrome的应用商店，即可安装（该方法不需要修改配置文件）</p><p><a href="https://chrome.google.com/webstore/detail/elasticsearch-head/ffmkiejjmecolpfloofpjologoblkegm">https://chrome.google.com/webstore/detail/elasticsearch-head/ffmkiejjmecolpfloofpjologoblkegm</a></p><h2 id="报错问题解决"><a href="#报错问题解决" class="headerlink" title="报错问题解决"></a>报错问题解决</h2><h3 id="1-使用-Elasticsearch-Head-查看“数据浏览”时，右侧不出数据，使用浏览器F12查看后，发现-406-Not-Acceptable-错误"><a href="#1-使用-Elasticsearch-Head-查看“数据浏览”时，右侧不出数据，使用浏览器F12查看后，发现-406-Not-Acceptable-错误" class="headerlink" title="1. 使用 Elasticsearch Head 查看“数据浏览”时，右侧不出数据，使用浏览器F12查看后，发现 406 Not Acceptable 错误"></a>1. 使用 Elasticsearch Head 查看“数据浏览”时，右侧不出数据，使用浏览器F12查看后，发现 406 Not Acceptable 错误</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> _site/</span><br><span class="line">vi vendor.js <span class="comment">##修改两处</span></span><br><span class="line"></span><br><span class="line">将 6886行 contentType: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span> 修改为 contentType: <span class="string">&quot;application/json;charset=UTF-8&quot;</span></span><br><span class="line">然后再将 7574行 var inspectData = s.contentType === <span class="string">&quot;application/x-www-form-urlencoded&quot;</span> &amp;&amp; 修改为 var inspectData = s.contentType === <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &amp;&amp;</span><br><span class="line"><span class="comment">## 具体步骤，由于容器中安装不了编辑器</span></span><br><span class="line">sed -i <span class="string">&#x27;s#var inspectData = s.contentType === &quot;application/x-www-form-urlencoded&quot;#var inspectData = s.contentType === &quot;application/json;charset=UTF-8&quot;#&#x27;</span> vendor.js</span><br><span class="line">sed -i <span class="string">&#x27;s#contentType: &quot;application/x-www-form-urlencoded&quot;#contentType: &quot;application/json;charset=UTF-8&quot;#&#x27;</span> vendor.js</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Elastic-Stack-简介&quot;&gt;&lt;a href=&quot;#Elastic-Stack-简介&quot; class=&quot;headerlink&quot; title=&quot;Elastic Stack 简介&quot;&gt;&lt;/a&gt;Elastic Stack 简介&lt;/h2&gt;&lt;p&gt;如果你没有听说过Elasti</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Elasticsearch" scheme="http://shizhonggan.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Stack(02)--Elasticsearch基本概念</title>
    <link href="http://shizhonggan.github.io/2021/10/11/ELK/ElasticSearch02/"/>
    <id>http://shizhonggan.github.io/2021/10/11/ELK/ElasticSearch02/</id>
    <published>2021-10-11T02:03:04.000Z</published>
    <updated>2021-10-29T09:25:15.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h2><p>Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。采用倒排索引。</p><table><thead><tr><th>Elasticsearch</th><th>Index(索引)</th><th>Type(类型，没这个概念了)</th><th>Documents(文档)</th><th>Fields(字段)</th></tr></thead><tbody><tr><td>MySQL</td><td>DataBase(数据库)</td><td>Table(表)</td><td>Row(行)</td><td>Column(列)</td></tr></tbody></table><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><ul><li>索引（index）是Elasticsearch对逻辑数据的逻辑存储，所以它可以分为更小的部分。</li><li>可以把索引看成关系型数据库的表，索引的结构是为快速有效的全文索引准备的，特别是它不存储原始值。</li><li>Elasticsearch可以把索引存放在一台机器或者分散在多台服务器上，每个索引有一或多个分片（shard），每个分片可以有多个副本（replica）。</li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li>存储在Elasticsearch中的主要实体叫文档（document）。用关系型数据库来类比的话，一个文档相当于数据库表中的一行记录。</li><li>Elasticsearch和MongoDB中的文档类似，都可以有不同的结构，但Elasticsearch的文档中，相同字段必须有相同类型。</li><li>文档由多个字段组成，每个字段可能多次出现在一个文档里，这样的字段叫多值字段（multivalued）。 每个字段的类型，可以是文本、数值、日期等。字段类型也可以是复杂类型，一个字段包含其他子文档或者数组。</li></ul><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><ul><li>所有文档写进索引之前都会先进行分析，如何将输入的文本分割为词条、哪些词条又会被过滤，这种行为叫做 映射（mapping）。一般由用户自己定义规则。</li></ul><h2 id="文档类型"><a href="#文档类型" class="headerlink" title="文档类型"></a>文档类型</h2><ul><li>在Elasticsearch中，一个索引对象可以存储很多不同用途的对象。例如，一个博客应用程序可以保存文章和评 论。</li><li>每个文档可以有不同的结构。</li><li>不同的文档类型不能为相同的属性设置不同的类型。例如，在同一索引中的所有文档类型中，一个叫title的字段必须具有相同的类型。</li></ul><h2 id="RESTful-API"><a href="#RESTful-API" class="headerlink" title="RESTful API"></a>RESTful API</h2><ul><li>在Elasticsearch中，提供了功能丰富的RESTful API的操作，包括基本的CRUD、创建索引、删除索引等操作。</li></ul><p>创建非结构化索引<br>在Lucene中，创建索引是需要定义字段名称以及字段的类型的，在Elasticsearch中提供了非结构化的索引，就是不需要创建索引结构，即可写入数据到索引中，实际上在Elasticsearch底层会进行结构化操作，此操作对用户是透明的。</p><h2 id="索引操作"><a href="#索引操作" class="headerlink" title="索引操作"></a>索引操作</h2><ul><li>DSL搜索： Elasticsearch提供丰富且灵活的查询语言叫做DSL查询(Query DSL),它允许你构建更加复杂、强大的查询。 DSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建索引,PUT有幂等性，所以不可以用POST</span></span><br><span class="line">PUT http://127.0.0.0.1:9200/shopping</span><br><span class="line"><span class="comment">// BODY raw json 请求参数可以设置如下，不设置默认</span></span><br><span class="line">    &#123;<span class="attr">&quot;settings&quot;</span>: &#123;<span class="attr">&quot;index&quot;</span>: &#123;<span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;2&quot;</span>,<span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;0&quot;</span>&#125;&#125;&#125; <span class="comment">// shards分片数 replicas副本数</span></span><br><span class="line">    &#123; # 返回结果</span><br><span class="line">        &quot;acknowledged&quot;: true,</span><br><span class="line">        &quot;shards_acknowledged&quot;: true,</span><br><span class="line">        &quot;index&quot;: &quot;shopping&quot;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 2. 获取索引信息</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping </span><br><span class="line">DELETE http://127.0.0.0.1:9200/shopping # 删除索引</span><br><span class="line">GET http://127.0.0.1:9200/_cat/indices?v</span><br><span class="line">#_cat 表示查看的意思， indices 表示索引，所以整体含义就是查看当前 ES服务器中的所有索引，就好像 MySQL 中的 show tables</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">    health status index            uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">    green  open   .geoip_databases F2VtNo9NTMS-B18XqvCcaA   1   0         41           52       51mb           51mb</span><br><span class="line">    green  open   test             0gFXqM0qQJ61S5e2iTk45A   2   0          0            0       416b           416b</span><br><span class="line">    yellow open   shopping         m_9bLGjIToCSCYF1VhHSng   1   1          0            0       208b           208b</span><br><span class="line"><span class="comment">// 3. 创建文档 POST </span></span><br><span class="line">POST http://127.0.0.0.1:9200/shopping/_doc # 会随机生成ID,所以不能用PUT</span><br><span class="line">PUT/POST http://127.0.0.0.1:9200/shopping/_doc/1001 # 设置ID, 该方式可以用PUT</span><br><span class="line">PUT/POST http://127.0.0.0.1:9200/shopping/_create/1001 # create功能同上</span><br><span class="line">    &#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="attr">&quot;category&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">3999.00</span>&#125;</span><br><span class="line">    &#123;<span class="comment">//返回结果</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;shopping&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;PoxKeHwBU1XQD5ffmuP9&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;created&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 4. 文档查询 主键查询 全量查询</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_doc/1002</span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search #获取全部</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 修改</span></span><br><span class="line">PUT/POST http://127.0.0.0.1:9200/shopping/_doc/1001 # 全量覆盖,</span><br><span class="line">    &#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">4999.00</span>&#125;</span><br><span class="line">POST http://127.0.0.0.1:9200/shopping/_update/1001 # 局部更新</span><br><span class="line">    &#123;<span class="attr">&quot;doc&quot;</span>:&#123;<span class="attr">&quot;title&quot;</span>: <span class="string">&quot;华为手机&quot;</span>&#125;&#125;</span><br><span class="line"><span class="comment">// 6. 条件查询 分页查询 查询排序</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search?q=category:小米 # 这种方式不好，q是query  </span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search</span><br><span class="line">    &#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;category&quot;:&quot;小米&quot;&#125;&#125;&#125; # 条件查询</span><br><span class="line">    &#123;&quot;query&quot;:&#123;&quot;match_all&quot;:&#123;&#125;&#125;&#125; # 全量查询</span><br><span class="line">    &#123;<span class="attr">&quot;query&quot;</span>:&#123;<span class="attr">&quot;match_all&quot;</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="attr">&quot;from&quot;</span>: <span class="number">0</span>, <span class="comment">// 从第0开始，(页码-1)*每页数据条数</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span>: <span class="number">2</span>, <span class="comment">// 每页显示2条</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span>: [<span class="string">&quot;titile&quot;</span>], <span class="comment">// 指定显示的内容</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span> <span class="comment">// 降序</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; # 全量查询</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 7. 多条件查询 范围查询 过滤查询</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search        </span><br><span class="line">    # must 多个条件同时满足</span><br><span class="line">    &#123;<span class="attr">&quot;query&quot;</span>:&#123;<span class="attr">&quot;bool&quot;</span>:&#123;<span class="attr">&quot;must&quot;</span>:[&#123;<span class="attr">&quot;match&quot;</span>:&#123;<span class="attr">&quot;category&quot;</span>:<span class="string">&quot;小米&quot;</span>&#125;&#125;, </span><br><span class="line">                            &#123;<span class="attr">&quot;match&quot;</span>:&#123;<span class="attr">&quot;proce&quot;</span>:<span class="string">&quot;1999.00&quot;</span>&#125;&#125;],</span><br><span class="line">                    <span class="attr">&quot;filter&quot;</span>:&#123;<span class="attr">&quot;range&quot;</span>:&#123;<span class="attr">&quot;price&quot;</span>:&#123;<span class="attr">&quot;gt&quot;</span>:<span class="number">5000</span>&#125;&#125;&#125;,</span><br><span class="line">    &#125;&#125;&#125;   </span><br><span class="line">    #should 或</span><br><span class="line">    &#123;<span class="attr">&quot;query&quot;</span>:&#123;<span class="attr">&quot;bool&quot;</span>:&#123;<span class="attr">&quot;should&quot;</span>:[&#123;<span class="attr">&quot;match&quot;</span>:&#123;<span class="attr">&quot;category&quot;</span>:<span class="string">&quot;小米&quot;</span>&#125;&#125;, </span><br><span class="line">                                &#123;<span class="attr">&quot;match&quot;</span>:&#123;<span class="attr">&quot;category&quot;</span>:<span class="string">&quot;华为&quot;</span>&#125;&#125;],               </span><br><span class="line">    &#125;&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><p>bool 查询可以用来合并多个条件查询结果的布尔逻辑，它包含一下操作符：</p></li><li><p>must :: 多个查询条件的完全匹配,相当于 and 。</p></li><li><p>must_not :: 多个查询条件的相反匹配，相当于 not 。</p></li><li><p>should :: 至少有一个查询条件匹配, 相当于 or 。</p></li><li><p>gt : 大于</p></li><li><p>gte:: 大于等于</p></li><li><p>lt : 小于</p></li><li><p>lte: 小于等于</p></li></ul><p>查询和过滤的对比</p><ul><li>一条过滤语句会询问每个文档的字段值是否包含着特定值。</li><li>查询语句会询问每个文档的字段值与特定值的匹配程度如何。</li><li>一条查询语句会计算每个文档与查询语句的相关性，会给出一个相关性评分 _score，并且 按照相关性对匹 配到的文档进行排序。 这种评分方式非常适用于一个没有完全配置结果的全文本搜索。</li><li>一个简单的文档列表，快速匹配运算并存入内存是十分方便的， 每个文档仅需要1个字节。这些缓存的过滤结果集与后续请求的结合使用是非常高效的。</li><li>查询语句不仅要查找相匹配的文档，还需要计算每个文档的相关性，所以一般来说查询语句要比 过滤语句更耗时，并且查询结果也不可缓存。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 8. 全文检索 完全匹配 高亮查询</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search</span><br><span class="line">    &#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;category&quot;:&quot;小华&quot;&#125;&#125;&#125; # 以此查询会同时返回“小米”和“华为”</span><br><span class="line">    &#123;<span class="attr">&quot;query&quot;</span>:&#123;<span class="attr">&quot;match_phrase&quot;</span>:&#123;<span class="attr">&quot;category&quot;</span>:<span class="string">&quot;小米&quot;</span>&#125;&#125;,</span><br><span class="line">     <span class="attr">&quot;highlight&quot;</span>:&#123;<span class="attr">&quot;fields&quot;</span>:&#123;<span class="attr">&quot;category&quot;</span>:&#123;&#125;&#125;&#125; # 对 <span class="string">&quot;category&quot;</span>字段高亮显示</span><br><span class="line">    &#125; # 完全匹配</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 9. 聚合查询</span></span><br><span class="line">GET http://127.0.0.0.1:9200/shopping/_search</span><br><span class="line">    &#123;<span class="attr">&quot;aggs&quot;</span>:&#123; <span class="comment">//聚合操作</span></span><br><span class="line">        <span class="attr">&quot;price_group&quot;</span>:&#123; <span class="comment">//名称，随便起</span></span><br><span class="line">            <span class="attr">&quot;terms&quot;</span>:&#123; <span class="comment">//分组</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span>:<span class="string">&quot;price&quot;</span> <span class="comment">//分组字段</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="attr">&quot;size&quot;</span>:<span class="number">0</span> <span class="comment">//原始数据不显示</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#123;<span class="attr">&quot;aggs&quot;</span>:&#123; <span class="comment">//聚合操作</span></span><br><span class="line">        <span class="attr">&quot;price_avg&quot;</span>:&#123; <span class="comment">//名称，随便起</span></span><br><span class="line">            <span class="attr">&quot;avg&quot;</span>:&#123; <span class="comment">//平均值</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span>:<span class="string">&quot;price&quot;</span> <span class="comment">//分组字段</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="attr">&quot;size&quot;</span>:<span class="number">0</span> <span class="comment">//原始数据不显示</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>有了索引库，等于有了数据库中的 database。<br>接下来就需要建索引库(index)中的映射了，类似于数据库(database)中的表结构(table)。<br>创建数据库表需要设置字段名称，类型，长度，约束等；索引库也一样，需要知道这个类型下有哪些字段，每个字段有哪些约束信息，这就叫做映射(mapping)。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 9. 映射关系</span></span><br><span class="line">PUT http://127.0.0.1:9200/user //先创建索引 user</span><br><span class="line">PUT http://127.0.0.1:9200/user/_mapping //创建映射</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">         <span class="attr">&quot;sex&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>, <span class="comment">//查询的时候必须完全匹配</span></span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;tel&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>, </span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: <span class="literal">false</span> <span class="comment">//不能被索引查询</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT http://127.0.0.1:9200/user/_create/1001</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="attr">&quot;sex&quot;</span>:<span class="string">&quot;男的&quot;</span>,<span class="attr">&quot;tel&quot;</span>:<span class="string">&quot;1111&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>tring类型在ElasticSearch 旧版本中使用较多，从ElasticSearch 5.x开始不再支持string，由text和 keyword类型替代。</li><li>text 类型，当一个字段是要被全文搜索的，比如Email内容、产品描述，应该使用text类型。设置text类型 以后，字段内容会被分析，在生成倒排索引以前，字符串会被分析器分成一个一个词项。text类型的字段 不用于排序，很少用于聚合。</li><li>keyword类型适用于索引结构化的字段，比如email地址、主机名、状态码和标签。如果字段需要进行过 滤(比如查找已发布博客中status属性为published的文章)、排序、聚合。keyword类型的字段只能通过精 确值搜索到。</li></ul><blockquote><p>增加数据后，进行数据查询，可以发现对sex必须完全匹配才能查询，对于tel字段不能被查询</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 10. 判断文档是否存在</span></span><br><span class="line">HEAD http://127.0.0.1:9200/user/1009 //返回状态码</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 11. 批量操作</span></span><br><span class="line">POST http://127.0.0.1:9200/user/_mget  //_mget 批量获取数据</span><br><span class="line">    &#123;<span class="attr">&quot;ids&quot;</span>:[<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;1003&quot;</span>]&#125;</span><br><span class="line">post http://127.0.0.1:9200/user/_bulk  //_bulk 批零插入、修改、删除操作</span><br><span class="line">    &#123;action: &#123;metada&#125;&#125; //create delete</span><br><span class="line">    &#123;request body&#125;</span><br><span class="line">    ...</span><br><span class="line">    &#123;<span class="attr">&quot;create&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2001</span>&#125;&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;name1&quot;</span>,<span class="attr">&quot;tel&quot;</span>:<span class="string">&quot;1111&quot;</span>,<span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;create&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2002</span>&#125;&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;name2&quot;</span>,<span class="attr">&quot;tel&quot;</span>:<span class="string">&quot;1111&quot;</span>,<span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;create&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2003</span>&#125;&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;name3&quot;</span>,<span class="attr">&quot;tel&quot;</span>:<span class="string">&quot;1111&quot;</span>,<span class="attr">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;delete&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2001</span>&#125;&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;delete&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2002</span>&#125;&#125;</span><br><span class="line">    &#123;<span class="attr">&quot;delete&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">2003</span>&#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>_bulk批量处理报错The bulk request must be terminated by a newline，在JSON数据最后回车换行，代码中可以，主要是<strong>最后一行要换行</strong></p></blockquote><p>其他操作就类似了。一次请求多少性能最高？</p><ul><li>整个批量请求需要被加载到接受我们请求节点的内存里，所以请求越大，给其它请求可用的内存就越小。有一 个最佳的bulk请求大小。超过这个大小，性能不再提升而且可能降低。</li><li>最佳大小，当然并不是一个固定的数字。它完全取决于你的硬件、你文档的大小和复杂度以及索引和搜索的负 载。</li><li>幸运的是，这个最佳点(sweetspot)还是容易找到的：试着批量索引标准的文档，随着大小的增长，当性能开始 降低，说明你每个批次的大小太大了。开始的数量可以在1000~5000个文档之间，如果你的文档非常大，可以使用较小的批次。</li><li>通常着眼于你请求批次的物理大小是非常有用的。一千个1kB的文档和一千个1MB的文档大不相同。一个好的 批次最好保持在5-15MB大小间。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 12. 结构化查询</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        &quot;term&quot;&#123; // 精确匹配；terms多个条件匹配 range范围查询结构gt等使用； exits文章中是否包含; match 全文本查询，结构化非结构化数据都可以查； bool，参照上面条件查询</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h2><p>分词就是指将一个文本转化成一系列单词的过程，也叫文本分析，在Elasticsearch中称之为Analysis。</p><p>指定分词器进行分词</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">POST /_analyze</span><br><span class="line">    &#123;<span class="comment">//输入参数</span></span><br><span class="line">        <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;text&quot;</span>:<span class="string">&quot;hello world&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#123;<span class="comment">//返回结果</span></span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">&quot;end_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;position&quot;</span>: <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;world&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;start_offset&quot;</span>: <span class="number">6</span>,</span><br><span class="line">                <span class="attr">&quot;end_offset&quot;</span>: <span class="number">11</span>,</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>中文分词难点</p><p>中文分词的难点在于，在汉语中没有明显的词汇分界点，如在英语中，空格可以作为分隔符，如果分隔不正确就会造成歧义。如：</p><ul><li>我/爱/炒肉丝</li><li>我/爱/炒/肉丝</li></ul><p>常用中文分词器，IK、jieba、THULAC等，推荐使用IK分词器。</p><p>IK Analyzer是一个开源的，基于java语言开发的轻量级的中文分词工具包。从2006年12月推出1.0版开始，IKAnalyzer已经推出了3个大版本。最初，它是以开源项目Luence为应用主体的，结合词典分词和文法分析算法的中文分词组件。新版本的IK Analyzer 3.0则发展为面向Java的公用分词组件，独立于Lucene项目，同时提供了对Lucene的默认优化实现。</p><p>采用了特有的“正向迭代最细粒度切分算法“，具有80万字/秒的高速处理能力 采用了多子处理器分析模式，支持：英文字母（IP地址、Email、URL）、数字（日期，常用中文数量词，罗马数字，科学计数法），中文词汇（姓名、地名处理）等分词处理。 优化的词典存储，更小的内存占用。</p><p>IK分词器 Elasticsearch插件地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik">https://github.com/medcl/elasticsearch-analysis-ik</a></p><p>安装分词器<br>首先下载到最新的ik分词器：下载地址:<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.9.1">https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.9.1</a></p><blockquote><p>注意版本匹配，否则报错：[ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [node-1] uncaught exception in thread [main]<br>org.elasticsearch.bootstrap.StartupException: java.lang.IllegalArgumentException: Plugin [analysis-ik] was built for Elasticsearch version 7.9.1 but version 7.15.0 is running</p></blockquote><p>下载完成后，使用xftp工具，拷贝到服务器上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装方法：将下载到的 es/plugins/ik 目录下</span></span><br><span class="line">mkdir es/plugins/ik</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">unzip elasticsearch-analysis-ik-7.9.1.zip</span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">ps aux |grep elasticsearch <span class="comment"># 查询进程先kill</span></span><br><span class="line">./bin/elasticsearch -d</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### 报错：</span></span><br><span class="line">[ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [node-1] fatal error <span class="keyword">in</span> thread [elasticsearch[node-1][system_read][T<span class="comment">#2]], exiting</span></span><br><span class="line">java.lang.OutOfMemoryError: Java heap space</span><br><span class="line">fatal error <span class="keyword">in</span> thread [elasticsearch[node-1][system_read][T<span class="comment">#2]], exiting</span></span><br><span class="line">java.lang.OutOfMemoryError: Java heap space</span><br><span class="line"><span class="comment"># 解决方法</span></span><br><span class="line">vi config/jvm.options</span><br><span class="line">    -Xms128m <span class="comment"># 改大 256m</span></span><br><span class="line">    -Xmx128m</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:9200/_analyze</span><br><span class="line">    &#123;<span class="comment">//输入参数</span></span><br><span class="line">        <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>, <span class="comment">//默认分词器 standard ,返回&#123;&quot;我&quot;,&quot;是&quot;,&quot;中&quot;,&quot;国&quot;,&quot;人&quot;&#125;，效果不好</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span>:<span class="string">&quot;我是中国人&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#123;<span class="comment">//返回结果</span></span><br><span class="line">    <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;我&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;是&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;中国人&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;中国&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;国人&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全文搜索"><a href="#全文搜索" class="headerlink" title="全文搜索"></a>全文搜索</h2><p>全文搜索两个最重要的方面是：</p><ul><li>相关性（Relevance） 它是评价查询与其结果间的相关程度，并根据这种相关程度对结果排名的一种能力，这 种计算方式可以是 TF/IDF 方法、地理位置邻近、模糊相似，或其他的某些算法。</li><li>分词（Analysis） 它是将文本块转换为有区别的、规范化的 token 的一个过程，目的是为了创建倒排索引以及查询倒排索引。</li></ul><blockquote><p>ES 7.4 默认不在支持指定索引类型，默认索引类型是_doc</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建索引</span></span><br><span class="line">PUT http://127.0.0.1:9200/itcast?include_type_name=true</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;index&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;number_of_shards&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;number_of_replicas&quot;</span>:<span class="string">&quot;0&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;person&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;age&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;mail&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span> <span class="comment">// 指定分词器</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line">POST http://127.0.0.1:9200/itcast/_bulk</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;itcast&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;person&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span>,<span class="attr">&quot;age&quot;</span>: <span class="number">20</span>,<span class="attr">&quot;mail&quot;</span>: <span class="string">&quot;111@qq.com&quot;</span>,<span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;羽毛球、乒乓球、足球&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;itcast&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;person&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;李四&quot;</span>,<span class="attr">&quot;age&quot;</span>: <span class="number">21</span>,<span class="attr">&quot;mail&quot;</span>: <span class="string">&quot;222@qq.com&quot;</span>,<span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;羽毛球、乒乓球、足球、篮球&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;itcast&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;person&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;王五&quot;</span>,<span class="attr">&quot;age&quot;</span>: <span class="number">22</span>,<span class="attr">&quot;mail&quot;</span>: <span class="string">&quot;333@qq.com&quot;</span>,<span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;羽毛球、篮球、游泳、听音乐&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;itcast&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;person&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;赵六&quot;</span>,<span class="attr">&quot;age&quot;</span>: <span class="number">23</span>,<span class="attr">&quot;mail&quot;</span>: <span class="string">&quot;444@qq.com&quot;</span>,<span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;跑步、游泳、篮球&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;itcast&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;person&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;孙七&quot;</span>,<span class="attr">&quot;age&quot;</span>: <span class="number">24</span>,<span class="attr">&quot;mail&quot;</span>: <span class="string">&quot;555@qq.com&quot;</span>,<span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;听音乐、看电影、羽毛球&quot;</span>&#125;</span><br><span class="line"><span class="comment">// 单词搜索</span></span><br><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;音乐&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过程说明：</p><ul><li>检查字段类型<ul><li>爱好 hobby 字段是一个 text 类型（ 指定了IK分词器），这意味着查询字符串本身也应该被分词。</li></ul></li><li>分析查询字符串 。<ul><li>将查询的字符串 “音乐” 传入IK分词器中，输出的结果是单个项 音乐。因为只有一个单词项，所以 match 查询执行的是单个底层 term 查询。</li></ul></li><li>查找匹配文档 。<ul><li>用 term 查询在倒排索引中查找 “音乐” 然后获取一组包含该项的文档，本例的结果是文档：3 、5 。</li></ul></li><li>为每个文档评分 。<ul><li>用 term 查询计算每个文档相关度评分 _score ，这是种将 词频（term frequency，即词 “音乐” 在相关文档的hobby 字段中出现的频率）和 反向文档频率（inverse document frequency，即词 “音乐” 在所有文档的hobby 字段中出现的频率），以及字段的长度（即字段越短相关度越高）相结合的计算方式。</li></ul></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多次搜索</span></span><br><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;音乐 篮球&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果返回的“或”的关系，包含了“音乐”、“篮球”的数据都已经被搜索到了。如果想搜索的是既包含“音乐”又包含“篮球”的用户，在Elasticsearch中，可以指定词之间的逻辑关系，如下:</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;音乐 篮球&quot;</span></span><br><span class="line">            <span class="string">&quot;operator&quot;</span>:<span class="string">&quot;and&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>前面我们测试了“OR” 和 “AND”搜索，这是两个极端，其实在实际场景中，并不会选取这2个极端，更有可能是选取这种，或者说，只需要符合一定的相似度就可以查询到数据，在Elasticsearch中也支持这样的查询，通过 minimum_should_match来指定匹配度，如：70%；</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>:<span class="string">&quot;游泳 羽毛球&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;minimum_should_match&quot;</span>:<span class="string">&quot;80%&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;hobby&quot;</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#结果：省略显示</span><br><span class="line">&quot;hits&quot;: &#123;</span><br><span class="line">&quot;total&quot;: 4, #相似度为80%的情况下，查询到4条数据</span><br><span class="line">&quot;max_score&quot;: 1.621458,</span><br><span class="line">&quot;hits&quot;: [</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#设置40%进行测试：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>:<span class="string">&quot;游泳 羽毛球&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;minimum_should_match&quot;</span>:<span class="string">&quot;40%&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#结果：</span><br><span class="line">&quot;hits&quot;: &#123;</span><br><span class="line">&quot;total&quot;: 5, #相似度为40%的情况下，查询到5条数据</span><br><span class="line">&quot;max_score&quot;: 1.621458,</span><br><span class="line">&quot;hits&quot;: [</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>相似度应该多少合适，需要在实际的需求中进行反复测试，才可得到合理的值。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组合搜索</span></span><br><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;bool&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;must&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;篮球&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;must_not&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;音乐&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;should&quot;</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;游泳&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>评分的计算规则</p><p>bool 查询会为每个文档计算相关度评分_score ， 再将所有匹配的 must 和 should 语句的分数_score 求和，最后除以 must 和 should 语句的总数。</p></blockquote><p>默认情况下，should中的内容不是必须匹配的，如果查询语句中没有must，那么就会至少匹配其中一个。当然了，也可以通过minimum_should_match参数进行控制，该值可以是<strong>数字也可以的百分比</strong>。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;bool&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;should&quot;</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;游泳&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;篮球&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:<span class="string">&quot;音乐&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;minimum_should_match&quot;</span>:<span class="number">2</span> <span class="comment">//意思是should中的三个词，至少要满足2个。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有些时候，我们可能需要对某些词增加权重来影响该条数据的得分。如下：</p><p>搜索关键字为“游泳篮球”，如果结果中包含了“音乐”权重为10，包含了“跑步”权重为2。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加权重 搜索</span></span><br><span class="line">POST http://127.0.0.1:9200/itcast/person/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;bool&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;must&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                    <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;query&quot;</span>:<span class="string">&quot;游泳篮球&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;operator&quot;</span>:<span class="string">&quot;and&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;should&quot;</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">                            <span class="attr">&quot;query&quot;</span>:<span class="string">&quot;音乐&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;boost&quot;</span>:<span class="number">10</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">                        <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line">                            <span class="attr">&quot;query&quot;</span>:<span class="string">&quot;跑步&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;boost&quot;</span>:<span class="number">2</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;highlight&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;fields&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;hobby&quot;</span>:&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ElasticSearch集群"><a href="#ElasticSearch集群" class="headerlink" title="ElasticSearch集群"></a>ElasticSearch集群</h2><h3 id="集群节点"><a href="#集群节点" class="headerlink" title="集群节点"></a>集群节点</h3><p>ELasticsearch的集群是由多个节点组成的，通过cluster.name设置集群名称，并且用于区分其它的集群，每个节点通过node.name指定节点的名称。</p><p>在Elasticsearch中，节点的类型主要有4种：</p><ul><li>master节点<ul><li>配置文件中node.master属性为true(默认为true)，就有资格被选为master节点。master节点用于控制整个集群的操作。比如创建或删除索引，管理其它非master节点等。</li></ul></li><li>data节点<ul><li>配置文件中node.data属性为true(默认为true)，就有资格被设置成data节点。data节点主要用于执行数据相关的操作。比如文档的CRUD。</li></ul></li><li>客户端节点<ul><li>配置文件中node.master属性和node.data属性均为false。</li><li>该节点不能作为master节点，也不能作为data节点。</li><li>可以作为客户端节点，用于响应用户的请求，把请求转发到其他节点</li></ul></li><li>部落节点<ul><li>当一个节点配置tribe.*的时候，它是一个特殊的客户端，它可以连接多个集群，在所有连接的集群上执行 搜索和其他操作。</li></ul></li></ul><h3 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动3个虚拟机，分别在3台虚拟机上部署安装Elasticsearch</span></span><br><span class="line">mkdir /itcast/es-cluster</span><br><span class="line"></span><br><span class="line"><span class="comment">## 此处将单节点的安装文件拷贝过来，并删除数据文件</span></span><br><span class="line">cp es/elasticsearch-7.15.0/ ../es-cluster/ -R</span><br><span class="line"><span class="built_in">cd</span> /itcast/es-cluster/elasticsearch-7.15.0/data</span><br><span class="line">rm -rf *</span><br><span class="line"><span class="built_in">cd</span> /itcast/es-cluster/elasticsearch-7.15.0/<span class="built_in">log</span></span><br><span class="line">rm -rf *</span><br><span class="line"></span><br><span class="line"><span class="comment">#分发到其它机器</span></span><br><span class="line">scp -r es-cluster elsearch@192.168.40.134:/itcast</span><br><span class="line"></span><br><span class="line"><span class="comment">#node01的配置：</span></span><br><span class="line">cluster.name: es-itcast-cluster</span><br><span class="line">node.name: node01</span><br><span class="line">node.master: <span class="literal">true</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">&quot;192.168.40.133&quot;</span>,<span class="string">&quot;192.168.40.134&quot;</span>,<span class="string">&quot;192.168.40.135&quot;</span>] <span class="comment"># 发现集群的广播的地址 旧版本</span></span><br><span class="line">discovery.seed_hosts: [<span class="string">&quot;192.168.0.8&quot;</span>,<span class="string">&quot;192.168.0.13&quot;</span>] <span class="comment"># 新版本，改其一即可</span></span><br><span class="line">cluster.initial_master_nodes: [<span class="string">&quot;node01&quot;</span>，<span class="string">&quot;node02&quot;</span>] <span class="comment"># 新版本修改</span></span><br><span class="line"><span class="comment"># 最小节点数</span></span><br><span class="line">discovery.zen.minimum_master_nodes: 2 <span class="comment"># 新版本没有此选项，暂不修改添加</span></span><br><span class="line"><span class="comment"># 跨域专用，最开始已经修改过了，此处不用修改，可以用echo 追加方式改</span></span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line">cat elasticsearch.yml |grep \<span class="comment">#cluster.name:</span></span><br><span class="line">cat elasticsearch.yml |grep node.name:</span><br><span class="line">cat elasticsearch.yml |grep network.host <span class="comment"># 不需要改</span></span><br><span class="line">cat elasticsearch.yml |grep http.port <span class="comment"># 不需要修改</span></span><br><span class="line">cat elasticsearch.yml |grep \<span class="comment">#discovery</span></span><br><span class="line">cat elasticsearch.yml |grep cluster.initial_master_nodes:</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">sed -i <span class="string">&#x27;s#\#cluster.name: my-application#cluster.name: es-itcast-cluster#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#node.name: node-1#node.name: node01#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#node.name: node01#node.name: node01\nnode.master: true\nnode.data: true#&#x27;</span> elasticsearch.yml <span class="comment"># 可以跟上面合并</span></span><br><span class="line">sed -i <span class="string">&#x27;s#\#discovery.seed_hosts: \[&quot;host1&quot;, &quot;host2&quot;\]#discovery.seed_hosts: \[&quot;192.168.0.8&quot;,&quot;192.168.0.13&quot;\]#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#cluster.initial_master_nodes: \[&quot;node-1&quot;\]#cluster.initial_master_nodes: \[&quot;node01&quot;，&quot;node02&quot;\]#&#x27;</span> elasticsearch.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#node02的配置：</span></span><br><span class="line">grep -Ev <span class="string">&#x27;^#|^$&#x27;</span> elasticsearch.yml</span><br><span class="line">    cluster.name: es-itcast-cluster</span><br><span class="line">    node.name: node02</span><br><span class="line">    node.master: <span class="literal">false</span></span><br><span class="line">    node.data: <span class="literal">true</span></span><br><span class="line">    network.host: 0.0.0.0</span><br><span class="line">    http.port: 9200</span><br><span class="line">    discovery.seed_hosts: [<span class="string">&quot;192.168.0.8&quot;</span>,<span class="string">&quot;192.168.0.13&quot;</span>] <span class="comment"># 新版本，改其一即可</span></span><br><span class="line">    cluster.initial_master_nodes: [<span class="string">&quot;node01&quot;</span>,<span class="string">&quot;node02&quot;</span>] <span class="comment"># 新版本修改</span></span><br><span class="line">    http.cors.enabled: <span class="literal">true</span></span><br><span class="line">    http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#\#cluster.name: my-application#cluster.name: es-itcast-cluster#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#node.name: node-1#node.name: node02\nnode.master: false\nnode.data: true#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#\#discovery.seed_hosts: \[&quot;host1&quot;, &quot;host2&quot;\]#discovery.seed_hosts: \[&quot;192.168.0.8&quot;,&quot;192.168.0.13&quot;\]#&#x27;</span> elasticsearch.yml</span><br><span class="line">sed -i <span class="string">&#x27;s#cluster.initial_master_nodes: \[&quot;node-1&quot;\]#cluster.initial_master_nodes: \[&quot;node01&quot;,&quot;node02&quot;\]#&#x27;</span> elasticsearch.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#node03的配置：,暂时没做三节点</span></span><br><span class="line">cluster.name: es-itcast-cluster</span><br><span class="line">node.name: node02</span><br><span class="line">node.master: <span class="literal">false</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">&quot;192.168.40.133&quot;</span>,<span class="string">&quot;192.168.40.134&quot;</span>,<span class="string">&quot;192.168.40.135&quot;</span>]</span><br><span class="line">discovery.zen.minimum_master_nodes: 2</span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#分别启动3个节点</span></span><br><span class="line">./elasticsearch</span><br></pre></td></tr></table></figure><p>打开elasticsearch_head前端，创建test索引，分片书为5，副本数为1，如下图所示，其中细边框是粗边框的副本：</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/elsearch_head.png" alt="elasticsearch_head"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询集群状态</span></span><br><span class="line">GET http://127.0.0.1:9200/_cluster/health</span><br></pre></td></tr></table></figure><p>集群状态的三种颜色</p><table><thead><tr><th>颜色</th><th>意义</th></tr></thead><tbody><tr><td>green</td><td>所有主要分片和复制分片都可用</td></tr><tr><td>yellow</td><td>所有主要分片可以，但不是所有复制分片可用</td></tr><tr><td>red</td><td>不是所有的主要分片都可用</td></tr></tbody></table><h3 id="分片和副本"><a href="#分片和副本" class="headerlink" title="分片和副本"></a>分片和副本</h3><p>为了将数据添加到Elasticsearch，我们需要索引(index)——一个存储关联数据的地方。实际上，索引只是一个用来指向一个或多个分片(shards)的“逻辑命名空间(logical namespace)”.</p><ul><li>一个分片(shard)是一个最小级别“工作单元(worker unit)”,它只是保存了索引中所有数据的一部分。</li><li>我们需要知道是分片就是一个Lucene实例，并且它本身就是一个完整的搜索引擎。应用程序不会和它直接通 信。</li><li>分片可以是主分片(primary shard)或者是复制分片(replica shard)。</li><li>索引中的每个文档属于一个单独的主分片，所以主分片的数量决定了索引最多能存储多少数据。</li><li>复制分片只是主分片的一个副本，它可以防止硬件故障导致的数据丢失，同时可以提供读请求，比如搜索或者从别的shard取回文档。</li><li>当索引创建完成的时候，主分片的数量就固定了，但是复制分片的数量可以随时调整。</li></ul><blockquote><p>如果有个节点，分片均匀分配到三个节点，让其中一个节点宕机，集群状态先变黄，经过一段时间，宕机的节点不再显示，(如果主节点宕机，主节点将重新选举产生)，集群恢复到绿色</p></blockquote><h3 id="分布式文档存储"><a href="#分布式文档存储" class="headerlink" title="分布式文档存储"></a>分布式文档存储</h3><p>问题： 集群保存文档时，文档该存储到哪个节点？随机还是轮询？如果读取又该如何查找？</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/doc_save.png" alt="doc_save"></p><p>elasticsearch采用计算的方式来确定存储到哪个节点，计算公式如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shard = hash(routing) <span class="comment">% number_of_primary_shards</span></span><br></pre></td></tr></table></figure><p>式中：routing值是一个任意字符串，它默认是”_id”，也可以自定义；routing字符串通过哈希函数生一个数字；<strong>这个routing字符串通过哈希函数生成一个数字，然后除以主切片的数量后得到余数(remainder),该余数就是特定文档所在的分片</strong>，这也是创建主分片后，不能修改的原因。</p><h3 id="分布式文档读写"><a href="#分布式文档读写" class="headerlink" title="分布式文档读写"></a>分布式文档读写</h3><p>新建、索引和删除请求都是写（write）操作，它们必须在主分片上成功完成才能复制分片上</p><p>下面我们罗列在主分片和复制分片上成功新建、索引或删除一个文档必要的顺序步骤：</p><ol><li>客户端给Node 1 发送新建、索引或删除请求。</li><li>节点使用文档的_id 确定文档属于分片0 。它转发请求到Node 3 ，分片0 位于这个节点上。</li><li>Node 3 在主分片上执行请求，如果成功，它转发请求到相应的位于Node 1 和Node 2 的复制节点上。当所有 的复制节点报告成功， Node 3 报告成功到请求的节点，请求的节点再报告给客户端。</li></ol><p>客户端接收到成功响应的时候，文档的修改已经被应用于主分片和所有的复制分片。你的修改生效了。</p><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/doc_write.png" alt="doc_write"></p><h3 id="分布式文档搜索（单个文档）"><a href="#分布式文档搜索（单个文档）" class="headerlink" title="分布式文档搜索（单个文档）"></a>分布式文档搜索（单个文档）</h3><p>文档能够从主分片或任意一个复制分片被检索。</p><p>下面我们罗列在主分片或复制分片上检索一个文档必要的顺序步骤：</p><ol><li>客户端给Node 1 发送get请求。</li><li>节点使用文档的_id 确定文档属于分片0 。分片0 对应的复制分片在三个节点上都有。此时，它转发请求到 Node 2 。</li><li>Node 2 返回文档(document)给Node 1 然后返回给客户端。对于读请求，为了平衡负载，请求节点会为每个请求选择不同的分片——它会循环所有分片副本。可能的情况是，一个被索引的文档已经存在于主分片上却还没来得及同步到复制分片上。这时复制分片会报告文档未找到，主分片会成功返回文档。一旦索引请求成功返回给用户，文档则在主分片和复制分片都是可用的。</li></ol><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/doc_search.png" alt="doc_search"></p><h3 id="分布式文档全文搜索"><a href="#分布式文档全文搜索" class="headerlink" title="分布式文档全文搜索"></a>分布式文档全文搜索</h3><p>搜索，分为2个阶段，</p><ul><li>搜索（query）</li><li>取回（fetch）</li></ul><p>搜索（query）查询阶段包含以下三步：</p><ol><li>客户端发送一个search（搜索） 请求给Node 3 , Node 3 创建了一个长度为from+size 的空优先级队</li><li>Node 3 转发这个搜索请求到索引中每个分片的原本或副本。每个分片在本地执行这个查询并且结果将结果到 一个大小为from+size 的有序本地优先队列里去。</li><li>每个分片返回document的ID和它优先队列里的所有document的排序值给协调节点Node 3 。Node 3 把这些 值合并到自己的优先队列里产生全局排序结果。</li></ol><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/doc_query.png" alt="doc_query"></p><p>取回（fetch）分发阶段由以下步骤构成：</p><ol><li>协调节点辨别出哪个document需要取回，并且向相关分片发出GET 请求。</li><li>每个分片加载document并且根据需要丰富（enrich）它们，然后再将document返回协调节点。</li><li>一旦所有的document都被取回，协调节点会将结果返回给客户端。</li></ol><p><img src="https://ganshizhong.gitee.io/blogimages/ElasticStack/doc_fetch.png" alt="doc_fetch"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据格式&quot;&gt;&lt;a href=&quot;#数据格式&quot; class=&quot;headerlink&quot; title=&quot;数据格式&quot;&gt;&lt;/a&gt;数据格式&lt;/h2&gt;&lt;p&gt;Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。采用倒排索引。&lt;/p&gt;
&lt;table&gt;
&lt;the</summary>
      
    
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/categories/ELK/"/>
    
    
    <category term="ELK" scheme="http://shizhonggan.github.io/tags/ELK/"/>
    
    <category term="Elasticsearch" scheme="http://shizhonggan.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(4)--Zabbix</title>
    <link href="http://shizhonggan.github.io/2021/09/27/DevOps/Zabbix/"/>
    <id>http://shizhonggan.github.io/2021/09/27/DevOps/Zabbix/</id>
    <published>2021-09-27T03:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础设施监控"><a href="#基础设施监控" class="headerlink" title="基础设施监控"></a>基础设施监控</h2><ul><li>基础设施监控<ul><li>服务器温度、风扇转速 ipmitool命令</li><li>存储监控(df,fdisk,iotop)</li><li>cpu (lscpu, uptime, top, htop, glances)</li><li>内存情况 (free)</li><li>网络(iftop)</li></ul></li><li>应用监控<ul><li>mysql redis</li><li>nginx</li><li>php-fpm</li><li>python</li></ul></li><li>安全监控<ul><li>nginx+lua编要给WAF通过kibana可以图形化站式不同的攻击类型统计</li><li>用户登录数，passwd文件变化，本地所有文件改动</li></ul></li><li>网络监控<ul><li>端口，IDC带宽网络流量，网络流入流出速率，网络入/出流量，网络使用率，SMTP, POP3</li></ul></li></ul><h2 id="完善理想的监控系统特点"><a href="#完善理想的监控系统特点" class="headerlink" title="完善理想的监控系统特点"></a>完善理想的监控系统特点</h2><ul><li>监控系统能够自定义监控内容，自己通过脚本采集所需的数据</li><li>数据存入到数据库，日后对该数据进行分析计算</li><li>监控系统可以简易，快速的部署到服务器</li><li>数据可视化只管清晰</li></ul><h2 id="异常警告通知"><a href="#异常警告通知" class="headerlink" title="异常警告通知"></a>异常警告通知</h2><ul><li>可以定义复杂度告警逻辑，做到监控项之间的关联警告，例如程序之间的依赖检测，而不是之单独检测某个指标</li><li>警告可以确认响应，让运维组内的人知道已经有人处理警告问题</li><li>报警方式可以字定义，如短信，邮件，以及微信，钉钉等</li><li>告警内容可以字定义，能够写入一些简单的饭呢西，便于运维人员只管了解数据，否则还得去服务器查看</li><li>报警后，可以预处理一些任务，如自我修复，重启，采集数据</li></ul><h2 id="协同工作"><a href="#协同工作" class="headerlink" title="协同工作"></a>协同工作</h2><ul><li>监控系统有强大的API，提供给研发同学调用或其他系统调用</li><li>监控数据开发性，数据结构主流，便于分析</li><li>监控可视化可以建议的插件使用，而非复杂的JS文件</li></ul><h2 id="zabbix优点"><a href="#zabbix优点" class="headerlink" title="zabbix优点"></a>zabbix优点</h2><ul><li>支持自定义监控脚本，提供需要输出的值即可</li><li>zabbix存储的数据库表结构稍有复杂但是逻辑清晰</li><li>zabbix存在模板概念，可以方便的将一组监控进行部署</li><li>每一个item就是监控项，可以看到历史记录，且web界面友好</li><li>zabbix有强大的Trigger(触发器)定义规则，可以定义复杂的报警逻辑</li><li>zabbix提供了ack报警确认机制</li><li>zabbix支持邮件，短信，微信等告警</li><li>zabbix在触发告警后，可以远程执行系统命令</li><li>zabbix有原生的php绘图模块</li></ul><h2 id="zabbix5-0-安装"><a href="#zabbix5-0-安装" class="headerlink" title="zabbix5.0 安装"></a>zabbix5.0 安装</h2><blockquote><p>5.0版本要求php版本最低7.2.0，对php扩展组件版本也有要求,具体参见<a href="https://www.zabbix.com/documentation/current/manual/installation/requirements">【官方文档】</a></p></blockquote><ul><li>准备机器，环境初始化</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 |awk <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span> <span class="comment"># 输出IP,如果没有制表符，则第二列不好输出</span></span><br><span class="line"><span class="comment">## 关闭防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">getenforce <span class="comment"># 查看是否关闭</span></span><br><span class="line">iptables -L <span class="comment"># 查看流量是否允许过来</span></span><br><span class="line">free -m <span class="comment"># 内存大点，至少两个G, 4G最好</span></span><br></pre></td></tr></table></figure><ul><li>获取zabbix的下载源</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm <span class="comment"># 获得镜像源</span></span><br><span class="line">ls /etc/yum.repos.d/ <span class="comment"># 可以查看到zabbix.repo文件</span></span><br><span class="line"><span class="comment">## 修改zabbix.repo的镜像源为阿里的</span></span><br><span class="line">sed -i <span class="string">&#x27;s#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo</span><br><span class="line"></span><br><span class="line">[zabbix-frontend]</span><br><span class="line">...</span><br><span class="line">enabled=1 <span class="comment"># 0改为1， 官方文档给的</span></span><br></pre></td></tr></table></figure><ul><li>清空缓存，安装zabbix server和 agent</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum clean all </span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">yum install zabbix-server-mysql zabbix-agent -y</span><br></pre></td></tr></table></figure><ul><li>安装software collections, 便于后续安装高版本的php, yum默认安装5.4过低。SCL(Software Colletions) 可以让你在同一个操作系统上安装和使用多个版本的软件，而不会影响系统的安装包。软件包会安装在/opt/rh目录下。为了避免系统广泛冲突， /opt/rh包安装在目录中。例如，这允许你在centOS 7安装python3.5,而不会删除或干扰/etc/opt/rh/软件包的所有配置文件都存储在目录中，SCL包提供了定义使用所包含应用程序所需的环境变量的shell脚本。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-scl -y</span><br></pre></td></tr></table></figure><ul><li>安装前端环境</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y</span><br></pre></td></tr></table></figure><ul><li>安装zabbix所需的数据库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server -y</span><br></pre></td></tr></table></figure><ul><li>配置数据库，设置开机启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now mariadb</span><br><span class="line"><span class="comment">## 初始化数据库</span></span><br><span class="line">systemctl status mariadb <span class="comment"># 先查看状态</span></span><br><span class="line">netstat -tunlp <span class="comment"># 查看3306端口</span></span><br><span class="line">mysql_secure_installation <span class="comment"># 初始化</span></span><br><span class="line"></span><br><span class="line">Enter current password <span class="keyword">for</span> root (enter <span class="keyword">for</span> none):</span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line">Set root password? [Y/n] y</span><br><span class="line">Remove anonymous users? [Y/n] y</span><br><span class="line">Disallow root login remotely? [Y/n] n</span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] y</span><br><span class="line">Reload privilege tables now? [Y/n] y</span><br><span class="line"></span><br><span class="line"><span class="comment">#################</span></span><br><span class="line">mysql -uroot -p1234 <span class="comment">#成功登录</span></span><br></pre></td></tr></table></figure><ul><li>添加数据库用户，以及zabbix所需的数据库信息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin; <span class="comment"># 创建数据库</span></span><br><span class="line">create user zabbix@localhost identified by <span class="string">&#x27;1234&#x27;</span>; <span class="comment"># 创建用户</span></span><br><span class="line">grant all privileges on zabbix.* to zabbix@localhost; <span class="comment"># 授权zabbix数据库下的所有表给zabbix这个用户</span></span><br><span class="line">flush privileges; <span class="comment"># 刷新</span></span><br></pre></td></tr></table></figure><ul><li>使用zabbix-mysql命令导入数据库信息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/share/doc/zabbix-server-mysql*/create.sql.gz <span class="comment"># 先查看以下</span></span><br><span class="line">    /usr/share/doc/zabbix-server-mysql-5.0.15/create.sql.gz</span><br><span class="line">    <span class="comment">## mysql -u用户名 -p 数据库名</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"></span><br><span class="line">mysql -uzabbix -p1234 <span class="comment"># 登录查看</span></span><br><span class="line">show databases;</span><br><span class="line">use zabbix;</span><br><span class="line">show tables; <span class="comment"># 可以查看很多表</span></span><br></pre></td></tr></table></figure><ul><li>修改zabbix server配置文件，修改数据库密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/zabbix/zabbix_server.conf</span><br><span class="line"><span class="comment">### Option: DBPassword</span></span><br><span class="line"><span class="comment">#       Database password.</span></span><br><span class="line"><span class="comment">#       Comment this line if no password is used.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Mandatory: no</span></span><br><span class="line"><span class="comment"># Default:</span></span><br><span class="line">DBPassword=1234</span><br><span class="line"><span class="comment">################</span></span><br><span class="line">grep <span class="string">&#x27;^DBPass&#x27;</span> /etc/zabbix/zabbix_server.conf <span class="comment"># 查看是否修改成功</span></span><br></pre></td></tr></table></figure><ul><li>修改php配置文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</span><br><span class="line">    php_value[date.timezone] = Asia/Shanghai <span class="comment"># 修改时区，取消注释</span></span><br></pre></td></tr></table></figure><ul><li>启动zabbix相关服务器</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br></pre></td></tr></table></figure><ul><li>登录访问web<ul><li>网址: ip/zabbix</li><li>用户：Admin</li><li>密码：zabbix</li></ul></li></ul><h2 id="zabbix客户端部署"><a href="#zabbix客户端部署" class="headerlink" title="zabbix客户端部署"></a>zabbix客户端部署</h2><p>zabbix5.0版本</p><p>agent2新版本采用golang语言开发，性能更高</p><p>由于是go语言开发，部署很方便，与之前的程序部署形式不一样</p><p>agent2 默认10050端口，客户端的端口。两个版本不能共存</p><ul><li>旧版本客户端，zabbix-agent</li><li>go语言新版本， zabbix-agent2</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################# centos</span></span><br><span class="line">getenforce <span class="comment"># 查看防火墙是否关闭</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 时间同步</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate -u ntp.aliyun.com</span><br><span class="line"><span class="comment"># 2. 时区统一</span></span><br><span class="line">mv /etc/localtime&#123;,.bak&#125;</span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 安装zabbix agent2,</span></span><br><span class="line">rpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm <span class="comment"># 获得镜像源</span></span><br><span class="line">sed -i <span class="string">&#x27;s#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo <span class="comment">#修改zabbix.repo的镜像源为阿里的</span></span><br><span class="line">yum install zabbix-agent2 -y <span class="comment"># 安装agent2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 查看配置文件和启动命令</span></span><br><span class="line">vi /etc/zabbix/zabbix_agent2.conf</span><br><span class="line">ls -l /usr/sbin/zabbix_agent2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 启动客户端</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now zabbix-agent2</span><br><span class="line">netstat -tnlp |grep  zabbix <span class="comment"># 查看端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">hostnamectl set-hostname agent1 <span class="comment"># 修改主机名</span></span><br><span class="line">grep -Ev <span class="string">&#x27;^#|^$&#x27;</span> /etc/zabbix/zabbix_agent2.conf <span class="comment"># 查看过滤掉注释和空行的配置文件</span></span><br><span class="line">cat /var/run/zabbix/zabbix_agent2.pid <span class="comment"># 查看进程号</span></span><br><span class="line">ps -ef |grep zabbix <span class="comment"># 看进程号是否一致</span></span><br><span class="line">vi /etc/zabbix/zabbix_agent2.conf</span><br><span class="line">        PidFile=/var/run/zabbix/zabbix_agent2.pid</span><br><span class="line">        LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agent2.log</span><br><span class="line">        LogFileSize=0</span><br><span class="line">        Server=127.0.0.1 <span class="comment"># 192.168.0.8</span></span><br><span class="line">        ServerActive=127.0.0.1 <span class="comment"># 192.168.0.8</span></span><br><span class="line">        Hostname=agent1 <span class="comment"># zbx-agent01</span></span><br><span class="line">        Include=/etc/zabbix/zabbix_agent2.d/*.conf</span><br><span class="line">        ControlSocket=/tmp/agent.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 重启agent2</span></span><br><span class="line">systemctl restart zabbix-agent2</span><br><span class="line"></span><br><span class="line"><span class="comment">#################### ubuntu</span></span><br><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><h2 id="验证-zabbix-agent2的连通性"><a href="#验证-zabbix-agent2的连通性" class="headerlink" title="验证 zabbix-agent2的连通性"></a>验证 zabbix-agent2的连通性</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 在服务端上通过命令主动获取数据</span></span><br><span class="line">yum install zabbix-get -y <span class="comment"># 可以主动去客户端拿数据</span></span><br><span class="line">zabbix_get  -s <span class="string">&#x27;192.168.0.13&#x27;</span> -p 10050 -k <span class="string">&#x27;agent.ping&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="zabbix-server-web-乱码问题"><a href="#zabbix-server-web-乱码问题" class="headerlink" title="zabbix-server web 乱码问题"></a>zabbix-server web 乱码问题</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install wqy-microhei-fonts -y</span><br><span class="line">\cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/fonts/dejavu/DejaVuSans.ttf</span><br></pre></td></tr></table></figure><h2 id="自定义监控内容"><a href="#自定义监控内容" class="headerlink" title="自定义监控内容"></a>自定义监控内容</h2><p>例1 自定义监控服务器登录人数，限制登陆人数不超过三个</p><h3 id="命令行方法"><a href="#命令行方法" class="headerlink" title="命令行方法"></a>命令行方法</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##################### 客户端操作</span></span><br><span class="line"><span class="comment"># 1. 明确要执行的linux命令</span></span><br><span class="line">who | wc -l</span><br><span class="line"><span class="comment"># 2. 手动创建zabbix的配置文件，用于定义key</span></span><br><span class="line">/etc/zabbix/zabbix_agent2.conf</span><br><span class="line"><span class="comment"># 3. 创建配置文件，内容如下</span></span><br><span class="line"><span class="built_in">cd</span> /etc/zabbix/zabbix_agentd.d/</span><br><span class="line">vi getusernum.conf</span><br><span class="line">UserParameter=login.user,who|wc -l</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart zabbix-agent2</span><br><span class="line">systemctl status zabbix-agent2</span><br><span class="line"></span><br><span class="line"><span class="comment">######################## 服务端操作</span></span><br><span class="line"><span class="comment"># 检查 </span></span><br><span class="line">zabbix_get -s <span class="string">&#x27;192.168.0.13&#x27;</span> -p 10050 -k <span class="string">&#x27;login.user&#x27;</span> <span class="comment"># 可以看到返回值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="web页面添加zabbix-server的自定义监控模板"><a href="#web页面添加zabbix-server的自定义监控模板" class="headerlink" title="web页面添加zabbix-server的自定义监控模板"></a>web页面添加zabbix-server的自定义监控模板</h3><ol><li>创建模板 ： 名称Template Login User Number</li><li>创建应用集</li><li>创建监控项，自定义item，具体想监控的内容</li><li>创建触发器，当监控获取到值的时候，进行触发器比较、判断，决定是否报警</li><li>创建图像</li><li>将具体的主机和该模板连接，关联</li></ol><h2 id="邮件报警"><a href="#邮件报警" class="headerlink" title="邮件报警"></a>邮件报警</h2><h2 id="全网监控方案"><a href="#全网监控方案" class="headerlink" title="全网监控方案"></a>全网监控方案</h2><h3 id="自动快速添加主机，思路"><a href="#自动快速添加主机，思路" class="headerlink" title="自动快速添加主机，思路"></a>自动快速添加主机，思路</h3><ul><li>克隆监控模板</li><li>自动注册和自动发现</li><li>使用zabbix的api接口，利用curl语言，或者开发自己的变成脚本如python等</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -H &#x27;Content-Type:application/json&#x27; -d&#x27;&#123;&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;user.login&quot;,&quot;params&quot;:&#123;&quot;user&quot;:&quot;Admin&quot;,&quot;password&quot;:&quot;zabbix&quot;&#125;,&quot;auth&quot;:null,&quot;id&quot;:0&#125;&#x27; &quot;http://119.255.249.177/zabbix/api_jsonrpc.php&quot;</span><br></pre></td></tr></table></figure><h3 id="监控实施方案"><a href="#监控实施方案" class="headerlink" title="监控实施方案"></a>监控实施方案</h3><ul><li><p>硬件监控</p></li><li><p>应用服务监控</p></li><li><p>rsync服务监控 </p><ul><li>监控服务器的873端口是否存活</li><li>有关端口的监控，使用zabbix自带的key net.tcp.port[,873]</li><li>进行数据推拉，检测效果</li></ul></li><li><p>监控NFC服务是否正常</p><ul><li>通过key检测111端口 net.tcp.port[,111]</li><li>showmount -e ip | wc -l</li></ul></li><li><p>监控mysql数据库是否正常</p><ul><li>通过端口 net.tcp.port[,3306]</li><li>zabbix自带mysql监控模板，直接添加主板和mysql的主机关联即可</li></ul></li><li><p>web 服务监控</p><ul><li>net.tcp.port[,80]</li><li>zabbix也提供了web服务器的监控模板</li></ul></li></ul><h3 id="监控服务的具体方案"><a href="#监控服务的具体方案" class="headerlink" title="监控服务的具体方案"></a>监控服务的具体方案</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口检测的命令, 结合grep查看端口是否存活</span></span><br><span class="line">netstat </span><br><span class="line">ss</span><br><span class="line">lsof</span><br><span class="line"><span class="comment">## 例如：</span></span><br><span class="line">netstat -tunlp|grep httpd</span><br><span class="line">zabbix_get -s <span class="string">&#x27;127.0.0.1&#x27;</span> -p 10050 -k <span class="string">&#x27;net.tcp.port[,80]&#x27;</span> </span><br><span class="line">pkill httpd <span class="comment"># 关闭进程，再查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询进程信息</span></span><br><span class="line">ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过客户端连接</span></span><br><span class="line"><span class="comment">## 1. curl 查询web服务器</span></span><br><span class="line"><span class="comment">## 2. mysql，用mysql语句连接验证</span></span><br><span class="line"><span class="comment">## 3. 缓存数据库服务，数据读写验证</span></span><br></pre></td></tr></table></figure><h3 id="自动发现（被动）与自动注册（主动）主机"><a href="#自动发现（被动）与自动注册（主动）主机" class="headerlink" title="自动发现（被动）与自动注册（主动）主机"></a>自动发现（被动）与自动注册（主动）主机</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 准备一台机器,安装好agent2</span></span><br><span class="line">systemctl is-active zabbix-agent2 <span class="comment"># 检查是否安装好</span></span><br><span class="line"><span class="comment"># 2. 配置host解析</span></span><br><span class="line">ip zabbix_server_name</span><br><span class="line">ip zabbix_agent_name</span><br><span class="line"><span class="comment">######  自动发现模式【配置-自动发现，然后通过动作选项加入主机】</span></span><br><span class="line">【略】</span><br><span class="line"><span class="comment">######  自动注册模式</span></span><br><span class="line"><span class="comment"># 3. 修改配置文件</span></span><br><span class="line">grep -Ev <span class="string">&#x27;^#|^$&#x27;</span> /etc/zabbix/zabbix_agent2.conf</span><br><span class="line"></span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix-agent/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=119.255.249.177</span><br><span class="line">ServerActive=119.255.249.177</span><br><span class="line">Hostname=gan</span><br><span class="line">HostnameItem=system.hostname <span class="comment"># 多设置的一项</span></span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.conf.d/*.conf</span><br><span class="line"><span class="comment"># 4. 验证连通性</span></span><br><span class="line">telnet 119.254.169.244 10050</span><br><span class="line">zabbix_get  -s <span class="string">&#x27;119.254.169.244&#x27;</span> -p 10050 -k <span class="string">&#x27;agent.ping&#x27;</span></span><br><span class="line"><span class="comment"># 配置-动作-创建动作-修改条件-操作添加主机-添加主机群主-添加链接到模板</span></span><br></pre></td></tr></table></figure><h2 id="分布式监控"><a href="#分布式监控" class="headerlink" title="分布式监控"></a>分布式监控</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 环境准备</span></span><br><span class="line">119.255.243.31 zabbix-proxy</span><br><span class="line">119.254.173.203 zabbix-agent2</span><br><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">iptables -L</span><br><span class="line">getenforce</span><br><span class="line">systemctl stop zabbix-agent2</span><br><span class="line">netstat -tunlp</span><br><span class="line"><span class="comment"># 自动发现与自动注册功能关闭</span></span><br><span class="line"><span class="comment"># zabbix-server 已经安装无需变动</span></span><br><span class="line"><span class="comment"># 准备好客户端机器，agent2机器</span></span><br><span class="line"><span class="comment"># 配置代理服务器，并且部署数据库，用于存储agent2发来的数据，最终发给zabbix-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu16 不支持zabbix5.0</span></span><br><span class="line"><span class="comment"># wget https://repo.zabbix.com/zabbix/5.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.0-1+bionic_all.deb</span></span><br><span class="line"><span class="comment"># sudo dpkg -i zabbix-release_5.0-1+bionic_all.deb</span></span><br><span class="line"><span class="comment"># sudo sed -i.bak &#x27;s#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#&#x27; /etc/apt/sources.list.d/zabbix.list </span></span><br><span class="line"><span class="comment"># apt update</span></span><br><span class="line"><span class="comment"># apt upgrade</span></span><br><span class="line"></span><br><span class="line">sudo apt install zabbix-proxy-mysql zabbix-get -y <span class="comment"># get可能安装不上，就不安装了</span></span><br><span class="line">apt-get install mariadb-server python-pymysql</span><br><span class="line">service mysql restart</span><br><span class="line">vi /etc/mysql/my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  collation-server = utf8_unicode_ci</span><br><span class="line">  init-connect=<span class="string">&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line">  character-set-server = utf8</span><br><span class="line"></span><br><span class="line">mysql_secure_installation <span class="comment"># 加强MariaDB的安全设置：</span></span><br><span class="line">create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">create user zabbix@localhost identified by <span class="string">&#x27;1234&#x27;</span>;</span><br><span class="line">grant all privileges on zabbix_proxy.* to zabbix@localhost; <span class="comment"># 授权zabbix数据库下的所有表给zabbix这个用户</span></span><br><span class="line">grant all on zabbix_proxy.* to <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;zabbix&#x27;</span> with grant option; <span class="comment"># 如果报错用该命令</span></span><br><span class="line">flush privileges; <span class="comment"># 刷新</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">dpkg -L zabbix-proxy-mysql <span class="comment"># 查看安装过程中数据库的位置</span></span><br><span class="line">  /usr/share/zabbix-proxy-mysql/schema.sql.gz</span><br><span class="line">zcat /usr/share/zabbix-proxy-mysql/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">sed -i.ori <span class="string">&#x27;162a DBPassword=zabbix&#x27;</span> /etc/zabbix/zabbix_proxy.conf <span class="comment"># 修改162行,并做了.ori的备份文件</span></span><br><span class="line">sed -i <span class="string">&#x27;s#Server=127.0.0.1#Server=119.255.249.177#&#x27;</span> /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">sed -i <span class="string">&#x27;s#Hostname=Zabbix proxy#Hostname=ryu#&#x27;</span> /etc/zabbix/zabbix_proxy.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查代理服务器配置文件</span></span><br><span class="line">grep  <span class="string">&#x27;^[a-Z]&#x27;</span> /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">  Server=119.255.249.177</span><br><span class="line">  Hostname=ryu <span class="comment"># 代理服务器名</span></span><br><span class="line">  LogFile=/var/<span class="built_in">log</span>/zabbix-proxy/zabbix_proxy.log</span><br><span class="line">  PidFile=/var/run/zabbix/zabbix_proxy.pid</span><br><span class="line">  DBName=zabbix_proxy</span><br><span class="line">  DBUser=zabbix</span><br><span class="line">  DBPassword=zabbix</span><br><span class="line">  FpingLocation=/usr/bin/fping</span><br><span class="line">  Fping6Location=/usr/bin/fping6</span><br><span class="line">  Include=/etc/zabbix/zabbix_proxy.conf.d/*.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">service zabbix-proxy status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在服务端添加代理服务器</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础设施监控&quot;&gt;&lt;a href=&quot;#基础设施监控&quot; class=&quot;headerlink&quot; title=&quot;基础设施监控&quot;&gt;&lt;/a&gt;基础设施监控&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基础设施监控&lt;ul&gt;
&lt;li&gt;服务器温度、风扇转速 ipmitool命令&lt;/li&gt;
&lt;li&gt;存储</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
    <category term="zabbix" scheme="http://shizhonggan.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(3)--Nagios使用</title>
    <link href="http://shizhonggan.github.io/2021/09/18/DevOps/Nagios3/"/>
    <id>http://shizhonggan.github.io/2021/09/18/DevOps/Nagios3/</id>
    <published>2021-09-18T03:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加一个监控主机"><a href="#添加一个监控主机" class="headerlink" title="添加一个监控主机"></a>添加一个监控主机</h2><ol><li>编辑 /usr/local/nagios/etc/objects/contacts.cfg 增加报警联系人信息<br>1. </li><li>编辑 /usr/local/nagios/etc/objects/templates.cfg 增加报警策略信息</li><li>编辑 /usr/local/nagios/etc/objects/localhost.cfg 增加被监控主机信息</li></ol><h2 id="检测配置文件是否正确"><a href="#检测配置文件是否正确" class="headerlink" title="检测配置文件是否正确"></a>检测配置文件是否正确</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nagios restart <span class="comment"># 重新启动</span></span><br><span class="line">nagios -v /etc/nagios/nagios.cfg <span class="comment"># 检查配置文件</span></span><br></pre></td></tr></table></figure><ol><li>配置文件有错的启动： Running configuration check… CONFIG ERROR! Restart aborted. Check your Nagios configuration</li><li>检测配置文件： nagios -v /etc/nagios/nagios.cfg</li></ol><h2 id="客户端安装nagios"><a href="#客户端安装nagios" class="headerlink" title="客户端安装nagios"></a>客户端安装nagios</h2><ol><li>在被监控的机器上安装nagios: yum install nagios</li><li>启动nrpe: systemctl start nagios</li></ol><h2 id="客户端进程nrpe"><a href="#客户端进程nrpe" class="headerlink" title="客户端进程nrpe"></a>客户端进程nrpe</h2><p>nrpe主要是用来搜集主机相关信息</p><ol><li>在被监控的机器上安装nrpe: yum install nrpe</li><li>启动nrpe: systemctl start nrpe</li><li>修改 /usr/local/nagios/etc/cgi.cfg 配置里的use_authentication 为0</li><li>重启nagios: systemctl restart nagios</li></ol><h2 id="图形化工具"><a href="#图形化工具" class="headerlink" title="图形化工具"></a>图形化工具</h2><p>nagios只显示当前状态，图形显示很差，可以用以下工具</p><ol><li>nagiosQL 图形化配置管理工具</li><li>pnp4nagios 监控信息图标工具</li><li>nagiosgraph 监控信息图标工具</li></ol><h2 id="插件下载"><a href="#插件下载" class="headerlink" title="插件下载"></a>插件下载</h2><ol><li><a href="https://exchange.nagios.org/">https://exchange.nagios.org/</a></li></ol><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><ol><li>编辑command.cfg, 增加一个command</li><li>在hosts文件中使用这个command</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;添加一个监控主机&quot;&gt;&lt;a href=&quot;#添加一个监控主机&quot; class=&quot;headerlink&quot; title=&quot;添加一个监控主机&quot;&gt;&lt;/a&gt;添加一个监控主机&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;编辑 /usr/local/nagios/etc/objects/contact</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
    <category term="Nagios" scheme="http://shizhonggan.github.io/tags/Nagios/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(3)--Nagios配置</title>
    <link href="http://shizhonggan.github.io/2021/09/18/DevOps/Nagios2/"/>
    <id>http://shizhonggan.github.io/2021/09/18/DevOps/Nagios2/</id>
    <published>2021-09-18T03:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nagios配置文件"><a href="#Nagios配置文件" class="headerlink" title="Nagios配置文件"></a>Nagios配置文件</h2><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/nagiosconfig.png" alt="nagios"></p><ul><li>nagios.cfg 主配置文件,进程运行状态的配置文件，其他配置文件主要是基于此配置文件选择</li><li>cgi.cfg 控制cgi访问的配置文件，网络访问协议,web访问配置</li><li>resource.cfg 资源文件，在此文件中定义的变量可以再其他配置文件中引用</li><li>objects/*.cfg 监控相关的配置文件,用于定义nagios对象<ul><li>commands.cfg 定义命令的配置文件，可以被其他文件应用</li><li>contacts.cfg 定义联系人和联系人组，用于接收警报消息</li><li>localhosts.cfg 定义监控本机的配置文件，不局限于local,可以是其配置文件</li><li>printer.cfg 定义打印机配置文件默认不启用</li><li>switch.cfg 监控路由器的配置文件，默认不启用</li><li>templates.cfg 模板配置文件</li><li>timeperiods.cfg 定义监控时间段的配置文件</li><li>windows.cfg 监控windows主机的一个配置文件模板，默认不启用</li></ul></li></ul><h2 id="Nagios主配置文件"><a href="#Nagios主配置文件" class="headerlink" title="Nagios主配置文件"></a>Nagios主配置文件</h2><p>对象配置文件模块：</p><ol><li>定义主机、主机组、联系人、联系人组、服务等</li><li>cfg_file指明配置文件分开定义</li><li>Nagios将会读取并处理所有这些配置文件</li></ol><h3 id="对象配置文件"><a href="#对象配置文件" class="headerlink" title="对象配置文件"></a>对象配置文件</h3><ul><li>#cfg_dir=/usr/local/nagios/etc/servers</li><li>#cfg_dir=/usr/local/nagios/etc/printers</li><li>#cfg_dir=/usr/local/nagios/etc/switches</li><li>#cfg_dir=/usr/local/nagios/etc/routers</li></ul><h3 id="对象缓存文件"><a href="#对象缓存文件" class="headerlink" title="对象缓存文件"></a>对象缓存文件</h3><p>这些选项将决定当Nagios启动或重启时，对象定义将<strong>被缓存在什么地方</strong>。CGI将从这个对象文件中读取对象的定义，而不是在之前的对象配置文件路径中去找。这样做是为了<strong>避免修改Nagios配置文件后引起的不一致问题</strong>。</p><h3 id="状态文件"><a href="#状态文件" class="headerlink" title="状态文件"></a>状态文件</h3><p>这个文件保存着目前检测到的服务和主机数据信息。这个文件当中的内容是被CGI读取并处理的，而它也是每次Nagios重新启动的时候被删除。</p><p>status_file=/var/log/nagios/stauts.dat</p><h3 id="Nagios进程运行用户和用户组"><a href="#Nagios进程运行用户和用户组" class="headerlink" title="Nagios进程运行用户和用户组"></a>Nagios进程运行用户和用户组</h3><ul><li>nagios_user = nagios</li><li>nagios_nagios = nagios</li></ul><h3 id="外部命令行"><a href="#外部命令行" class="headerlink" title="外部命令行"></a>外部命令行</h3><ul><li>check_external_commands = 1 , 这个选项允许用户指定是否Nagios应对外部的命令进行检查</li><li>command_check_interval = 15s , 外部命令检查时间间隔</li><li>command_file=/var/log/nagios/rw/nagios.cmd , 这事Nagios用力啊检查外部命令请求的文件。这个文件同样也是用户操作提交于CGI命令写入的地。</li><li>external_command_buffer_slot = 4096 , 外部命令缓冲</li></ul><h3 id="运行文件"><a href="#运行文件" class="headerlink" title="运行文件"></a>运行文件</h3><ul><li>downtime_file=/var/log/nagios/downtime.dat, 这是Nagios用来记录主机和服务故障停机时间数据的文件</li><li>lock_file=/var/run/nagios.pid , 设定Nagios的PID文件</li><li>temp_file=/var/log/nagios/nagios.tmp , 设定临时文件的路径</li></ul><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li>log_file : 设定Nagios的主日志文件的路径(需修改，负责会出现权限问题)</li><li>log_rotation_method : 写主日志记录是的循环记录方式</li><li>log_archive_path : 设定日志归档路径</li><li>use_syslog : 默认设定Nagios信息加入系统日志</li><li>log_notifications : 默认设定Nagios的通知是记录的</li><li>log_service_retries: 默认设定记录服务重启信息</li><li>log_host_retries : 默认设定记录主机重启信息</li><li>log_event_handlers : 默认启用记录事件处理程序信息</li><li>log_initial_states : 默认不记录初始化状态信息(最好开启)</li><li>log_external_commands : 默认设定记录外部命令信息</li><li>log_passive_checks : 默认设定记录被动检查信息</li></ul><h3 id="主服务间内部检查之间延时的方式"><a href="#主服务间内部检查之间延时的方式" class="headerlink" title="主服务间内部检查之间延时的方式"></a>主服务间内部检查之间延时的方式</h3><ul><li>service_inter_check_delay_method : 默认设定服务间检查间隔采用smart算法<ul><li>值n表示none,不做任何延迟</li><li>值d表示dump, 表示在两个相邻的检查之间做1s的延迟</li><li>值s表示smart, 表示默认精简方式安排延迟</li><li>值x.xx表示动手定制每相邻的检查之间固定的x.xx秒延迟</li></ul></li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nagios配置文件&quot;&gt;&lt;a href=&quot;#Nagios配置文件&quot; class=&quot;headerlink&quot; title=&quot;Nagios配置文件&quot;&gt;&lt;/a&gt;Nagios配置文件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://ganshizhong.gitee.io</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
    <category term="Nagios" scheme="http://shizhonggan.github.io/tags/Nagios/"/>
    
  </entry>
  
  <entry>
    <title>JumpServer堡垒机</title>
    <link href="http://shizhonggan.github.io/2021/09/16/DevOps/JumpServer/"/>
    <id>http://shizhonggan.github.io/2021/09/16/DevOps/JumpServer/</id>
    <published>2021-09-16T03:03:04.000Z</published>
    <updated>2021-11-24T03:20:22.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h2 id="身份认证Authentication"><a href="#身份认证Authentication" class="headerlink" title="身份认证Authentication"></a>身份认证Authentication</h2><h2 id="账号管理Accout"><a href="#账号管理Accout" class="headerlink" title="账号管理Accout"></a>账号管理Accout</h2><h2 id="授权控制Authorization"><a href="#授权控制Authorization" class="headerlink" title="授权控制Authorization"></a>授权控制Authorization</h2><h2 id="审计Audit"><a href="#审计Audit" class="headerlink" title="审计Audit"></a>审计Audit</h2><h2 id="JumpServer安全提示"><a href="#JumpServer安全提示" class="headerlink" title="JumpServer安全提示"></a>JumpServer安全提示</h2><h2 id="JumpServer高可用部署"><a href="#JumpServer高可用部署" class="headerlink" title="JumpServer高可用部署"></a>JumpServer高可用部署</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;h2 id=&quot;身份认证Authentication&quot;&gt;&lt;a href=&quot;#身份认证Authentication&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="JumpServer" scheme="http://shizhonggan.github.io/tags/JumpServer/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(2)</title>
    <link href="http://shizhonggan.github.io/2021/09/16/DevOps/SaltStack/"/>
    <id>http://shizhonggan.github.io/2021/09/16/DevOps/SaltStack/</id>
    <published>2021-09-16T03:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SaltStack概念"><a href="#SaltStack概念" class="headerlink" title="SaltStack概念"></a>SaltStack概念</h2><ol><li>一个配置管理系统，能够维护预定义状态的远程节点</li><li>一个分布式远程执行系统，用来在远程节点上执行命令和查询数据</li></ol><h2 id="SaltStack特点"><a href="#SaltStack特点" class="headerlink" title="SaltStack特点"></a>SaltStack特点</h2><ol><li>简单(相对于Puppet)</li><li>并行执行</li><li>基于成熟技术(ZeroMQ, AES)</li><li>Python API</li><li>灵活开放</li></ol><h2 id="SaltStack服务架构"><a href="#SaltStack服务架构" class="headerlink" title="SaltStack服务架构"></a>SaltStack服务架构</h2><ol><li>Master – 负责管理所有节点(可以有多个)</li><li>Minion – 节点服务(客户端)</li><li>ZeroMQ – 通信服务</li><li>AES – 数据加密方法</li></ol><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/saltstackframe.png" alt="saltstack"></p><h2 id="SaltStack-缺点"><a href="#SaltStack-缺点" class="headerlink" title="SaltStack 缺点"></a>SaltStack 缺点</h2><ol><li>需要单独安装客户端</li><li>安全隐患大</li></ol><h2 id="ZeroMQ-简述"><a href="#ZeroMQ-简述" class="headerlink" title="ZeroMQ 简述"></a>ZeroMQ 简述</h2><p>ZeroMQ以嵌入式网络变成库的形式实现了一个并行开发框架，能够提供进程内、进程间、网络和广播方式的消息信道，并支持扇出、发布-订阅、任务分发、请求/相应等通信模式。【入门不需要深入了解】</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SaltStack概念&quot;&gt;&lt;a href=&quot;#SaltStack概念&quot; class=&quot;headerlink&quot; title=&quot;SaltStack概念&quot;&gt;&lt;/a&gt;SaltStack概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;一个配置管理系统，能够维护预定义状态的远程节点&lt;/li&gt;</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(3)--Nagios安装</title>
    <link href="http://shizhonggan.github.io/2021/09/15/DevOps/Nagios/"/>
    <id>http://shizhonggan.github.io/2021/09/15/DevOps/Nagios/</id>
    <published>2021-09-15T03:03:04.000Z</published>
    <updated>2021-10-28T06:55:59.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nagios"><a href="#Nagios" class="headerlink" title="Nagios"></a>Nagios</h2><p>一款免费的开源IT基础设施监控系统，其功能强大，灵活性强，能够监控windows、linux、VMware和Unix主机状态，交换机、路由器等网络设置等。</p><p>结构上分为两个部分：</p><ol><li>核心功能 <strong>轻量化</strong></li><li>插件</li></ol><h2 id="Nagios特性"><a href="#Nagios特性" class="headerlink" title="Nagios特性"></a>Nagios特性</h2><ol><li>监控网络服务(HTTP,)</li><li>监控主机资源(CPU负载、CPU使用率、进程状态等)</li><li>主动通知</li><li>web页面（发现异常报警功能）</li><li>可扩展</li></ol><h2 id="Nagios优点"><a href="#Nagios优点" class="headerlink" title="Nagios优点"></a>Nagios优点</h2><ol><li>轻量级，架构简单</li><li>容易部署</li><li>文档健全</li><li>灵活、全面（插件安装方便，可随时安装卸载，即插即用）</li></ol><h2 id="Nagios-缺点"><a href="#Nagios-缺点" class="headerlink" title="Nagios 缺点"></a>Nagios 缺点</h2><ol><li>修改配置麻烦(只能改配置文件，不能再web页面改)</li><li>太灵活、学习成本高</li><li>监控报警缺乏历史数据(可以通过插件解决 )</li><li>严重依赖外部插件</li></ol><h2 id="Nagios-原理"><a href="#Nagios-原理" class="headerlink" title="Nagios 原理"></a>Nagios 原理</h2><p>简而言之，主机给客户机发了指令，让客户机收集相关信息，客户机把信息收集后发送给主机。</p><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/nagios.png" alt="nagios"></p><p>通信过程：</p><ol><li>Nagios执行安装在它里面的check_nrpe插件，并告诉check_nrpe去检测哪些服务。</li><li>Nagios执行安装在它里面的check_nrpe插件，并告诉check_nrpe去检测哪些服务</li><li>NRPE运行本地的各种插件区检测本地的服务和状态(check_disk,..etc)</li><li>最后，NRPE把检测的结果传给主机端的check_nrpe,check_nrpe再把结果送到Nagios状态队列中。</li><li>Nagios依次读取队列中的信息，再把结果显示出来。</li></ol><h2 id="Nagios-安装"><a href="#Nagios-安装" class="headerlink" title="Nagios 安装"></a>Nagios 安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">mv CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">wget http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line">yum makecache</span><br><span class="line">yum -y update</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install the required packages</span></span><br><span class="line">yum install gcc glibc glibc-common wget gd gd-devel perl postfix unzip zip httpd php <span class="comment"># php安装后可访问web页面</span></span><br><span class="line"><span class="comment"># Download and Install Nagios Core</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.3.tar.gz</span><br><span class="line">tar xzf nagios-4.4.3.tar.gz</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/nagiosinstalled.png" alt="nagiosinstalled"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">useradd nagios</span><br><span class="line">groupadd nagcmd</span><br><span class="line">usermod -a -G nagcmd nagios</span><br><span class="line">usermod -a -G nagcmd apache <span class="comment"># 得安装httpd才有</span></span><br><span class="line"></span><br><span class="line">./configure --with-nagios-group=nagios --with-command-group=nagcmd</span><br><span class="line">make all</span><br><span class="line">make install</span><br><span class="line">make install-init</span><br><span class="line"><span class="comment"># Next, run the following command to install the Nagios sample configuration files</span></span><br><span class="line">make install-config</span><br><span class="line"><span class="comment"># To, install the initialization script which can be used to manage your Nagios service, run the following command</span></span><br><span class="line">make install-daemoninit</span><br><span class="line"><span class="comment"># Run the following command to install and configure the external command file to make Nagios Core to work from the command line:</span></span><br><span class="line">make install-commandmode</span><br><span class="line"><span class="comment"># The following command will install the Apache web server configuration files</span></span><br><span class="line">make install-webconf</span><br><span class="line"><span class="comment"># After all the installations are complete, restart your apache service with:</span></span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/nagiosconfigpath.png" alt="nagiosconfigpath"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create nagiosadmin User Account</span></span><br><span class="line">htpasswd -c /usr/<span class="built_in">local</span>/nagios/etc/htpasswd.users nagiosadmin <span class="comment">#password 1234</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####### Install Nagios Plugins ######</span></span><br><span class="line">yum install gcc glibc glibc-common make gettext automake autoconf wget openssl-devel net-snmp net-snmp-utils epel-release perl-Net-SNMP </span><br><span class="line"></span><br><span class="line">wget https://nagios-plugins.org/download/nagios-plugins-2.2.1.tar.gz</span><br><span class="line">tar -zxvf nagios-plugins-2.2.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> /tmp/nagios-plugins-2.2.1/</span><br><span class="line"><span class="comment"># Compile and install the Nagios plugins.</span></span><br><span class="line">./configure --with-nagios-user=nagios --with-nagios-group=nagios</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后将 Nagios 和 Apache 设置为开机启动，并重启 Nagios 服务以使配置修改内容生效，最后打开防火墙，放行HTTP服务：</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nagios</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">systemctl restart nagios</span><br><span class="line">firewall-cmd --add-service=http --zone=public --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># Accessing Nagios Core</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nagios/bin/nagios -v /usr/<span class="built_in">local</span>/nagios/etc/nagios.cfg</span><br><span class="line">systemctl start nagios</span><br><span class="line"></span><br><span class="line">http://119.255.249.177/nagios/</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://linuxhostsupport.com/blog/how-to-install-nagios-core-on-centos-7/">https://linuxhostsupport.com/blog/how-to-install-nagios-core-on-centos-7/</a></p><p><a href="https://www.itzgeek.com/how-tos/linux/centos-how-tos/monitor-centos-7-rhel-7-using-nagios-4-0-7.html">https://www.itzgeek.com/how-tos/linux/centos-how-tos/monitor-centos-7-rhel-7-using-nagios-4-0-7.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nagios&quot;&gt;&lt;a href=&quot;#Nagios&quot; class=&quot;headerlink&quot; title=&quot;Nagios&quot;&gt;&lt;/a&gt;Nagios&lt;/h2&gt;&lt;p&gt;一款免费的开源IT基础设施监控系统，其功能强大，灵活性强，能够监控windows、linux、VMware和</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
    <category term="Nagios" scheme="http://shizhonggan.github.io/tags/Nagios/"/>
    
  </entry>
  
  <entry>
    <title>Python 自动化运维(1)</title>
    <link href="http://shizhonggan.github.io/2021/09/12/DevOps/Ansible/"/>
    <id>http://shizhonggan.github.io/2021/09/12/DevOps/Ansible/</id>
    <published>2021-09-12T03:03:04.000Z</published>
    <updated>2021-11-23T07:24:52.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>运维自动化是一组将静态的设备结构转化为根据IT服务需求动态弹性响应的策略，目的就是实现IT运维的质量，降低成本。</p><p>优点：高效利、平台化、标准化、流程化</p><p>自动化运维工具：</p><ul><li>部署类： jenkins</li><li>环境类： ansible</li><li>监控类： ngios</li></ul><p>运维包括：监控、持续集成、运维等</p><p>运维自动化设计思想： 管理体系化、工作流程化、人员专业化、任务自动化（环境定义自动化、部署自动化、监控自动化）</p><p>关心的问题：自动化、易实现、跨平台、轻量级</p><p>缺点： 数据无法共享、无法主动式发现问题[不能预测]、部署成本高、标准不统一</p><p>云运维： 资源数据共享、主动发现问题、统一标准、批量推送成本低</p><h2 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h2><p>Ansible是一个自动化管理IT资源的工具</p><p>功能：</p><ul><li>系统环境配置</li><li>安装软件</li><li>持续集成</li><li>热回滚</li></ul><p>优点：</p><ul><li>无客户端</li><li>推送式</li><li>丰富module</li><li>基于YAML的Playbook</li><li>商业化支持</li></ul><p>缺点：</p><ul><li>效率低、易挂起，串行的，</li></ul><p>与其他软件对比：</p><p><img src="https://ganshizhong.gitee.io/blogimages/SDN/DevOps/ansiblecompared.png" alt="ansible"></p><h2 id="Ansible教程"><a href="#Ansible教程" class="headerlink" title="Ansible教程"></a>Ansible教程</h2><p>准备环境</p><ul><li>pyhon</li><li>setuptools</li></ul><p>参考:<a href="https://www.cnblogs.com/effortsing/p/10012070.html">https://www.cnblogs.com/effortsing/p/10012070.html</a> </p><p>快速安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-setuptools</span><br><span class="line">sudo apt install python3-pip</span><br><span class="line">python3 -m pip install ansible </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 这个方式好，能产生ansible.cfg</span></span></span><br><span class="line">sudo apt-get install -y python-software-properties software-properties-common</span><br><span class="line">sudo add-apt-repository -y ppa:ansible/ansible; sudo apt-get update</span><br><span class="line">sudo apt-get install -y ansible</span><br></pre></td></tr></table></figure><p>Ansible源码安装, 主要是因为自定义了系统、软件环境</p><ul><li>获取源码</li><li>解压源码</li><li>进入目录</li><li>运行source ./hacking/env-setup</li></ul><p>Ansible系统源安装:</p><ul><li>Centos <ul><li>yum install ansible</li></ul></li><li>Ubuntu<ul><li>apt-get install software-prperties-common</li><li>apt-get-repository ppa:ansible/ansible</li><li>apt-get update</li><li>apt-get install ansible</li></ul></li></ul><p>ansible是基于ssh通信的，所以不需要后台起服务</p><p>Ansible配置文件路径</p><ul><li>export ANSIBLE_CONFIG # 首先，Ansible命令会检查环境变量，及这个环境变量将指向的配置文件</li><li>./ansible.cfg # 其次，将会检查当前目录下的ansible.cfg配置文件</li><li>~/.ansible.cfg # 再次，将会检查当前用户home目录下的.ansible.cfg配置文件</li><li>/etc/ansible/ansible.cfg # 最后，将会检查在用软件包管理工具安装Ansible时自动产生的配置文件</li></ul><p>如果以上目录都没有，则自己新建，只能有一个配置文件，不然会被覆盖</p><h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h2><p>Ansible命令格式： ansible all -m ping </p><ol><li>ansible 命令主题： ansible/ansible-playbook</li><li>被操作的目标机器的正则表达式： all</li><li>指定使用的模块： -m ping （command shell 命令）</li><li>传入参数: -a 传入的参数，例：ansible all -a ‘ls’</li></ol><p>命令详解：<br>|optional arguments|detail|<br>|-|-|<br>-a | 指定传入模块的参数<br>-C -D | 两个一起使用，检查hosts规则文件的修改<br>-l | 限制匹配规则的主机数<br>-list-hosts | 显示所有匹配规则的主机数<br>-m -M | 指定所用的模块和模块路径<br>–syntax-check | 检查语法<br>-v | 显示详细日志</p><ul><li>添加一台主机<ul><li>编辑/etc/ansible/hosts, 如果没有可以手动添加，其他位置创建也可以</li><li>添加本地public SSH key 到目标机器的authorized_keys</li><li>添加本机的密钥到Ansible</li><li>运行ansible all -m ping 测试添加是否成功</li></ul></li></ul><p><strong>Inventory</strong>（分组）</p><p><strong>Patterns</strong> ( )</p><p><strong>Ad-Hoc</strong> ()</p><p><strong>Playbook</strong> 是一种简单的配置管理系统与多机器部署系统的基础。与现有的其他系统有不同之处，且非常适合于复杂应用的部署。</p><p>Playbooks可用于声明配置，更强大的地方在于，playbooks中以编排有序的执行过程，甚至于做到在多组机器间，来回有序的执行带别指定的步骤，且可以同步或异步的发起任务。</p><h3 id="Ansible-API"><a href="#Ansible-API" class="headerlink" title="Ansible API"></a>Ansible API</h3><p>API提供的功能：</p><ul><li><p>调用Ansible模块</p><ul><li><ol><li>引入Ansible runner库</li></ol></li><li><ol start="2"><li>初始化runner对象， 传入相关参数</li></ol></li><li><ol start="3"><li>运行runner对象的runner函数</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ansible.runner</span><br><span class="line">runner = ansible.runner.Runner(</span><br><span class="line">  module_name = <span class="string">&#x27;ping&#x27;</span>,</span><br><span class="line">  module_args = <span class="string">&#x27;&#x27;</span>, <span class="comment"># 参数</span></span><br><span class="line">  pattern = <span class="string">&#x27;web*&#x27;</span>, <span class="comment"># 匹配的机器</span></span><br><span class="line">  forks = <span class="number">10</span>, <span class="comment"># 进程数</span></span><br><span class="line">)</span><br><span class="line">datastructure = runner.run()</span><br></pre></td></tr></table></figure><blockquote><p>ansible2.0版本前后，差异很大，以上示例不适用于2.0后，以下是Ansible2.0 API使用方法</p></blockquote><ul><li><ol><li>定义一个结果对象</li></ol></li><li><ol start="2"><li>初始化ansible节点对象</li></ol></li><li><ol start="3"><li>初始化结果对象</li></ol></li><li><ol start="4"><li>创建一个任务</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后续学</span></span><br></pre></td></tr></table></figure></li><li><p>开发动态的Inventory数据源</p></li><li><p>更好的控制playbook等功能的运行</p></li></ul><p>编写ansible module</p><p>字定义Ansible Plugin</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;运维自动化是一组将静态的设备结构转化为根据IT服务需求动态弹性响应的策略，目的就是实现IT运维的质量，降低成本。&lt;/p&gt;
&lt;p&gt;优点：高效利</summary>
      
    
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/categories/DevOps/"/>
    
    
    <category term="DevOps" scheme="http://shizhonggan.github.io/tags/DevOps/"/>
    
    <category term="Ansilbe" scheme="http://shizhonggan.github.io/tags/Ansilbe/"/>
    
  </entry>
  
  <entry>
    <title>Django RESTful API 学习笔记</title>
    <link href="http://shizhonggan.github.io/2021/09/07/Python/django_RESTful/"/>
    <id>http://shizhonggan.github.io/2021/09/07/Python/django_RESTful/</id>
    <published>2021-09-07T08:36:04.000Z</published>
    <updated>2021-10-28T06:55:59.903Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1k5411p7Kp?p=3&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1k5411p7Kp?p=3&amp;spm_id_from=pageDriver</a></p><h2 id="1-web应用模式"><a href="#1-web应用模式" class="headerlink" title="1 web应用模式"></a>1 web应用模式</h2><ul><li>前后端分离<ul><li>juery – ajax</li><li>vue – axios</li></ul></li><li>前后端不分离，后端渲染好页面或重定向到其他页面</li></ul><h2 id="2-RESTful风格"><a href="#2-RESTful风格" class="headerlink" title="2 RESTful风格"></a>2 RESTful风格</h2><p>统一了CURD, 增删改查。REST(Representational State Transfer)</p><p>设计方法：</p><ul><li>域名<ul><li>专属域名 <a href="https://api.xxx.com/">https://api.xxx.com</a> </li><li><a href="https://xxx.com/api/">https://xxx.com/api/</a></li></ul></li><li>版本<ul><li>版本号放入域名<a href="https://xxx.com/api/1.0/foo">https://xxx.com/api/1.0/foo</a></li><li>放入HTTP头部信息中，Accept: vnd.example-com.foo+json; version=1.0</li></ul></li><li>路径<ul><li>资源作为网址，只能是名词，不能有动词，往往与数据库的表明对应 <a href="https://xxx.api/1.0/books/name">https://xxx.api/1.0/books/name</a></li><li> API的mincing应使用附属</li></ul></li><li>HTTP动词<ul><li>GET(SELECT)</li><li>POST(CREATE)</li><li>PUT(UPDATE)</li><li>DELETE(DELETE)</li><li>PATCH(UPDATE)局部更新</li><li>HEAD 元数据</li><li>OPTIONS 无害请求</li></ul></li><li>过滤信息(Filtering)</li><li>状态码(Status Codes)</li><li>错误处理</li><li>返回结果json格式</li></ul><h2 id="3-RESTful案例"><a href="#3-RESTful案例" class="headerlink" title="3 RESTful案例"></a>3 RESTful案例</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1k5411p7Kp?p=3&amp;amp;spm_id_from=pageDriver&quot;&gt;https://www.bilibili.com/video/BV1k5411p7Kp?p=3&amp;amp;</summary>
      
    
    
    
    <category term="Django" scheme="http://shizhonggan.github.io/categories/Django/"/>
    
    
    <category term="Django" scheme="http://shizhonggan.github.io/tags/Django/"/>
    
    <category term="RESTful API" scheme="http://shizhonggan.github.io/tags/RESTful-API/"/>
    
  </entry>
  
</feed>
